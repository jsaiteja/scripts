{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/drivelatest/src/components/Stepper/FileUpload.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass FileUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = event => {\n      console.log(event.target.files);\n\n      if (this.maxSelectedFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n        this.setState({\n          selectedFile: event.target.files,\n          loaded: 0\n        });\n      }\n    };\n\n    this.onChangeHandler1 = event => {\n      console.log(event.target.files);\n\n      if (this.maxSelectedFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n        this.setState({\n          JsonKey: event.target.files,\n          loaded1: 0\n        });\n      }\n    };\n\n    this.checkMimeType = event => {\n      let files = event.target.files;\n      let err = \"\";\n      const types = [\"application/json\", \"application/octet-stream\", \"application/x-yaml\", \"application/yaml\", \"text/vnd.yaml\", \"application/pdf\", \"text/yaml\", \"text/x-yaml\", \"application/xml\", \"image/png\", \"image/jpeg\", \"image/gif\", \"application/zip\", \"application/pdf\", \"application/java-archive\"];\n\n      for (let x = 0; x < files.length; x++) {\n        if (types.every(type => files[x].type !== type)) {\n          err[x] += files[x].type + \" is not a supported format\\n\";\n        }\n      }\n\n      for (let z = 0; z < err.length; z++) {\n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 250000000; // let err = \"\";\n\n      let err = [];\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err[x] += files[x].type + \"is too large, please pick a smaller file\\n\";\n        }\n      } // if (err !== \"\") {\n      //   event.target.value = null;\n      //   console.log(err);\n      //   return false;\n      // }\n\n\n      for (let z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.maxSelectedFile = event => {\n      let files = event.target.files;\n\n      if (files.length > 3) {\n        const message = \"Only 3 messages can be uploaded at a time\";\n        event.target.value = null;\n        toast.warn(message);\n        console.log(message);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onClickHandler = e => {\n      console.log(this.state.selectedFile);\n      console.log(e.target.value);\n      const data = new FormData();\n\n      for (let x = 0; x < this.state.selectedFile.length; x++) {\n        data.append(\"file\", this.state.selectedFile[x]);\n      }\n\n      console.log(\"q  wefeghryt\", this.state.projectName);\n      data.append(\"ProjectName\", this.state.projectName);\n      console.log(data);\n      axios.post(\"http://35.237.232.109:8000/upload/\", data, {\n        onUploadProgress: progressEvent => {\n          console.log(progressEvent.loaded / progressEvent.total);\n          this.setState({\n            loaded: progressEvent.loaded / progressEvent.total * 100\n          });\n        }\n      }).then(res => {\n        console.log(res.statusText);\n        toast.success(\"upload success\");\n      }).catch(err => {\n        toast.error(\"upload fail\");\n      });\n    };\n\n    this.onClickHandler1 = e => {\n      console.log(this.state.JsonKey);\n      console.log(e.target.value);\n      const data = new FormData();\n\n      for (let x = 0; x < this.state.JsonKey.length; x++) {\n        data.append(\"file\", this.state.JsonKey[x]);\n      }\n\n      data.append(\"ProjectName\", this.state.projectName); // data.append(\"myFile\", this.state.selectedFile, this.state.selectedFile);\n\n      console.log(data);\n      axios.post(\"http://35.237.232.109:8000/upload/\", data, {\n        onUploadProgress: progressEvent => {\n          console.log(progressEvent.loaded / progressEvent.total);\n          this.setState({\n            loaded1: progressEvent.loaded / progressEvent.total * 100\n          });\n        }\n      }).then(res => {\n        console.log(res.statusText);\n        toast.success(\"upload success\");\n      }).catch(err => {\n        toast.error(\"upload fail\");\n      });\n    };\n\n    this.state = {\n      selectedFile: null,\n      loaded: 0,\n      JsonKey: null,\n      loaded1: 0,\n      ProjectName: \"\"\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      selectedFile: this.props.selectedFile\n    });\n    this.setState({\n      JsonKey: this.props.JsonKey\n    });\n    this.setState({\n      loaded: this.props.loaded\n    });\n    this.setState({\n      loaded1: this.props.loaded1\n    });\n    this.setState({\n      projectName: this.props.projectName\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: true,\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), this.state.selectedFile && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, Math.round(this.state.loaded, 2), \"%\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-block\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Upload\")), this.state.JsonKey && React.createElement(React.Fragment, null, React.createElement(Progress, {\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, Math.round(this.state.loaded1, 2), \"%\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-block\",\n      onClick: this.onClickHandler1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Upload\"))));\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/home/nikhil/Desktop/drivelatest/src/components/Stepper/FileUpload.jsx"],"names":["React","Component","axios","Progress","ToastContainer","toast","FileUpload","constructor","props","onChangeHandler","event","console","log","target","files","maxSelectedFile","checkMimeType","checkFileSize","setState","selectedFile","loaded","onChangeHandler1","JsonKey","loaded1","err","types","x","length","every","type","z","error","value","size","message","warn","onClickHandler","e","state","data","FormData","append","projectName","post","onUploadProgress","progressEvent","total","then","res","statusText","success","catch","onClickHandler1","ProjectName","componentWillUnmount","render","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nclass FileUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      loaded: 0,\n      JsonKey: null,\n      loaded1: 0,\n      ProjectName: \"\"\n    };\n  }\n  componentWillUnmount() {\n    this.setState({ selectedFile: this.props.selectedFile });\n    this.setState({ JsonKey: this.props.JsonKey });\n    this.setState({ loaded: this.props.loaded });\n    this.setState({ loaded1: this.props.loaded1 });\n    this.setState({ projectName: this.props.projectName });\n  }\n  onChangeHandler = event => {\n    console.log(event.target.files);\n    if (\n      this.maxSelectedFile(event) &&\n      this.checkMimeType(event) &&\n      this.checkFileSize(event)\n    ) {\n      this.setState({\n        selectedFile: event.target.files,\n        loaded: 0\n      });\n    }\n  };\n  onChangeHandler1 = event => {\n    console.log(event.target.files);\n    if (\n      this.maxSelectedFile(event) &&\n      this.checkMimeType(event) &&\n      this.checkFileSize(event)\n    ) {\n      this.setState({\n        JsonKey: event.target.files,\n        loaded1: 0\n      });\n    }\n  };\n  checkMimeType = event => {\n    let files = event.target.files;\n    let err = \"\";\n\n    const types = [\n      \"application/json\",\n      \"application/octet-stream\",\n      \"application/x-yaml\",\n      \"application/yaml\",\n      \"text/vnd.yaml\",\n      \"application/pdf\",\n      \"text/yaml\",\n      \"text/x-yaml\",\n      \"application/xml\",\n      \"image/png\",\n      \"image/jpeg\",\n      \"image/gif\",\n      \"application/zip\",\n      \"application/pdf\",\n      \"application/java-archive\"\n    ];\n\n    for (let x = 0; x < files.length; x++) {\n      if (types.every(type => files[x].type !== type)) {\n        err[x] += files[x].type + \" is not a supported format\\n\";\n      }\n    }\n    for (let z = 0; z < err.length; z++) {\n      // discard selected file\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n  checkFileSize = event => {\n    let files = event.target.files;\n    let size = 250000000;\n    // let err = \"\";\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n      if (files[x].size > size) {\n        err[x] += files[x].type + \"is too large, please pick a smaller file\\n\";\n      }\n    }\n    // if (err !== \"\") {\n    //   event.target.value = null;\n    //   console.log(err);\n    //   return false;\n    // }\n    for (let z = 0; z < err.length; z++) {\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n\n    return true;\n  };\n  maxSelectedFile = event => {\n    let files = event.target.files;\n    if (files.length > 3) {\n      const message = \"Only 3 messages can be uploaded at a time\";\n      event.target.value = null;\n      toast.warn(message);\n      console.log(message);\n      return false;\n    }\n    return true;\n  };\n  onClickHandler = e => {\n    console.log(this.state.selectedFile);\n    console.log(e.target.value);\n    const data = new FormData();\n    for (let x = 0; x < this.state.selectedFile.length; x++) {\n      data.append(\"file\", this.state.selectedFile[x]);\n    }\n    console.log(\"q  wefeghryt\", this.state.projectName);\n    data.append(\"ProjectName\", this.state.projectName);\n    console.log(data);\n\n    axios\n      .post(\"http://35.237.232.109:8000/upload/\", data, {\n        onUploadProgress: progressEvent => {\n          console.log(progressEvent.loaded / progressEvent.total);\n          this.setState({\n            loaded: (progressEvent.loaded / progressEvent.total) * 100\n          });\n        }\n      })\n      .then(res => {\n        console.log(res.statusText);\n        toast.success(\"upload success\");\n      })\n\n      .catch(err => {\n        toast.error(\"upload fail\");\n      });\n  };\n\n  onClickHandler1 = e => {\n    console.log(this.state.JsonKey);\n    console.log(e.target.value);\n    const data = new FormData();\n    for (let x = 0; x < this.state.JsonKey.length; x++) {\n      data.append(\"file\", this.state.JsonKey[x]);\n    }\n    data.append(\"ProjectName\", this.state.projectName);\n    // data.append(\"myFile\", this.state.selectedFile, this.state.selectedFile);\n    console.log(data);\n\n    axios\n      .post(\"http://35.237.232.109:8000/upload/\", data, {\n        onUploadProgress: progressEvent => {\n          console.log(progressEvent.loaded / progressEvent.total);\n          this.setState({\n            loaded1: (progressEvent.loaded / progressEvent.total) * 100\n          });\n        }\n      })\n      .then(res => {\n        console.log(res.statusText);\n        toast.success(\"upload success\");\n      })\n\n      .catch(err => {\n        toast.error(\"upload fail\");\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* {this.state.selectedFile !== null && this.state.JsonKey === null && (\n          <input\n            type=\"file\"\n            className=\"form-control\"\n            multiple\n            onChange={this.onChangeHandler}\n            value={this.state.selectedFile}\n          />\n        )}\n        {this.state.JsonKey !== null && this.state.selectedFile === null && (\n          <input\n            type=\"file\"\n            className=\"form-control\"\n            multiple\n            onChange={this.onChangeHandler}\n            value={this.state.JsonKey}\n          />\n        )}\n        {this.state.selectedFile !== null && this.state.JsonKey !== null && (\n          <input\n            type=\"file\"\n            className=\"form-control\"\n            multiple\n            onChange={this.onChangeHandler}\n          />\n        )}\n        {this.state.selectedFile === null && this.state.JsonKey === null && (\n          <input\n            type=\"file\"\n            className=\"form-control\"\n            multiple\n            onChange={this.onChangeHandler}\n          />\n        )} */}\n        <input\n          type=\"file\"\n          className=\"form-control\"\n          multiple\n          onChange={this.onChangeHandler}\n        />\n        <br />\n        <div className=\"form-group\">\n          <ToastContainer />\n          {this.state.selectedFile && (\n            <div>\n              <Progress max=\"100\" color=\"success\" value={this.state.loaded}>\n                {Math.round(this.state.loaded, 2)}%\n              </Progress>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary btn-block\"\n                onClick={this.onClickHandler}\n              >\n                Upload\n              </button>\n            </div>\n          )}\n          {this.state.JsonKey && (\n            <>\n              <Progress max=\"100\" color=\"success\" value={this.state.loaded1}>\n                {Math.round(this.state.loaded1, 2)}%\n              </Progress>\n\n              <button\n                type=\"button\"\n                className=\"btn btn-primary btn-block\"\n                onClick={this.onClickHandler1}\n              >\n                Upload\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}