{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/drivelatest/src/components/Stepper/stepper.jsx\";\nimport React, { Component, Suspense } from \"react\";\nimport axios from \"axios\";\nimport \"./stepper.css\";\nimport FormComponent1 from \"./FormComponent1\";\nimport FormComponent2 from \"./FormComponent2\";\nimport FormComponent3 from \"./FormComponent3\";\nimport FormComponent4 from \"./FormComponent4\";\nimport FormComponent5 from \"./FormComponent5\"; // const MultiStep = React.lazy(() => import(\"react-multistep\"));\n\nconst MultiStep = React.lazy(() => import(\"./multistep\"));\n\nconst fallback = params => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" fallback \");\n};\n\nclass Stepper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClearForm = id => {\n      console.log(\"id is \", id);\n\n      switch (id) {\n        case 1:\n          this.setState({\n            step1: this.getInitialState(1)\n          });\n          return 1;\n          break;\n\n        case 2:\n          this.setState({\n            step2: this.getInitialState(2)\n          });\n          return 2;\n          break;\n      }\n    };\n\n    this.handleClearForm1 = e => {\n      e.preventDefault();\n      this.handleClearForm();\n    };\n\n    this.loading = () => React.createElement(\"div\", {\n      className: \"animated fadeIn pt-1 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \" Loading... \");\n\n    this.state = {\n      stepid: 1,\n      step1: {\n        folderNameGitTerraformGcp: \"\",\n        folderNameGitTerraformAws: \"\",\n        templateNameGitCft: \"\",\n        folderNameGitDM: \"\",\n        mainTemplateNameGitDM: \"\",\n        projectName: \"\",\n        projectTypes: [{\n          type: \"AI / ML\",\n          isDisabled: \"\",\n          id: 1\n        }, {\n          type: \"Software Development\",\n          isDisabled: \"disabled\",\n          id: 2\n        }, {\n          type: \"Platform\",\n          isDisabled: \"disabled\",\n          id: 3\n        }, {\n          type: \"Data Lake\",\n          isDisabled: \"disabled\",\n          id: 4\n        }],\n        DeploymentEnvironments: [{\n          type: \"Dev\",\n          isDisabled: \"\",\n          id: 1\n        }, {\n          type: \"Test\",\n          isDisabled: \"\",\n          id: 2\n        }, {\n          type: \"Prod\",\n          isDisabled: \"\",\n          id: 3\n        }],\n        DeploymentEnvironmentSelection: \"\",\n        projectSelection: \"\",\n        hidden: \"true\",\n        hidden1: \"true\",\n        hidden2: \"true\",\n        urlName: \"\",\n        branchName: \"\",\n        userName: \"\",\n        passWord: \"\",\n        infraOptions: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"GCP\"\n        }, {\n          isDisabled: \"\",\n          id: 2,\n          inf: \"AWS\"\n        }, {\n          isDisabled: \"disabled\",\n          id: 3,\n          inf: \"Azure\"\n        }],\n        infraSelection: \"\",\n        accountGcpOptions: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"Driveboard\"\n        }, {\n          isDisabled: \"\",\n          id: 2,\n          inf: \"Personal\"\n        }],\n        accountAwsOptions: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"Driveboard\"\n        }, {\n          isDisabled: \"\",\n          id: 2,\n          inf: \"Personal\"\n        }],\n        accountGcpSelection: \"\",\n        accountAwsSelection: \"\",\n        ProjectNamePersonalaccGcp: \"\",\n        ProjectIDGcp: \"\",\n        ServiceAccountGcp: \"\",\n        JsonKey: null,\n        selectedFile: null,\n        loaded: 0,\n        loaded1: 0,\n        email: \"\",\n        AccountIdAws: \"\",\n        AccessKeyAws: \"\",\n        SecretAccessKeyAws: \"\",\n        TemplateOptionsGcp: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"Deployment Manager\"\n        }, {\n          isDisabled: \"\",\n          id: 2,\n          inf: \"Terraform\"\n        }],\n        TemplateSelectedOptionGcp: \"\",\n        TerraformOptionsGcp: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"Manual Upload\"\n        }, {\n          isDisabled: \"disabled\",\n          id: 2,\n          inf: \"Terraform Generator\"\n        }],\n        TerraformSelectedOptionGcp: \"\",\n        TemplateOptionsAws: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"Cloud Formation\"\n        }, {\n          isDisabled: \"\",\n          id: 2,\n          inf: \"Terraform\"\n        }],\n        TerraformOptionsAws: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"Manual Upload\"\n        }, {\n          isDisabled: \"disabled\",\n          id: 2,\n          inf: \"Terraform Generator\"\n        }],\n        TerraformSelectedOptionAws: \"\",\n        TemplateSelectedOptionAws: \"\",\n        SourceProvidersGcp: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"Git\"\n        }, {\n          isDisabled: \"\",\n          id: 2,\n          inf: \"Cloud Storage\"\n        }, {\n          isDisabled: \"\",\n          id: 3,\n          inf: \"Local\"\n        }],\n        SourceProviderSelectionGcp: \"\",\n        SourceProvidersAws: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"Git\"\n        }, {\n          isDisabled: \"\",\n          id: 2,\n          inf: \"S3\"\n        }, {\n          isDisabled: \"\",\n          id: 3,\n          inf: \"Local\"\n        }],\n        SourceProviderSelectionAws: \"\",\n        TemplateUrlS3: \"\",\n        TemplateUrlGcp: \"\"\n      },\n      step2: {\n        stepid: 2,\n        AvailableOptions: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"Infrastructure Security check\",\n          checked: \"checked\"\n        }, {\n          isDisabled: \"disabled\",\n          id: 2,\n          inf: \"Code Quality Check\",\n          checked: \"\"\n        }, {\n          isDisabled: \"disabled\",\n          id: 3,\n          inf: \"Application Security Check\",\n          checked: \"\"\n        }, {\n          isDisabled: \"\",\n          id: 4,\n          inf: \"Data Security Check\",\n          checked: \"checked\"\n        }, {\n          isDisabled: \"\",\n          id: 5,\n          inf: \"Network Security Check\",\n          checked: \"checked\"\n        }],\n        SelectedOptions: []\n      },\n      step3: {\n        stepid: 3,\n        workFlowOptions: [{\n          isDisabled: \"\",\n          id: 1,\n          inf: \"Logging\",\n          checked: \"checked\"\n        }, {\n          isDisabled: \"disabled\",\n          id: 2,\n          inf: \"Monitoring\",\n          checked: \"\"\n        }, {\n          isDisabled: \"\",\n          id: 3,\n          inf: \"Integration with JIRA\",\n          checked: \"\"\n        }, {\n          isDisabled: \"disabled\",\n          id: 4,\n          inf: \"Git Provisioning\",\n          checked: \"\"\n        }],\n        workFlowSelectedOptions: [],\n        MonitoringOptions: [{\n          isDisabled: \"disabled\",\n          id: 1,\n          inf: \"Cloud Watch\"\n        }, {\n          isDisabled: \"disabled\",\n          id: 2,\n          inf: \"Stack Driver\"\n        }],\n        MonitoringOptionSelection: \"\",\n        JiraOptions: [{\n          isDisabled: \"disabled\",\n          id: 1,\n          inf: \"Add to an existing JIRA project\"\n        }, {\n          isDisabled: \"\",\n          id: 2,\n          inf: \"Create a new JIRA project\"\n        }],\n        JiraOptionSelection: \"\",\n        JiraUserName: \"\",\n        JiraPassword: \"\",\n        GitOptions: [{\n          isDisabled: \"disabled\",\n          id: 1,\n          inf: \"Add an existing gitlab account\"\n        }, {\n          isDisabled: \"disabled\",\n          id: 2,\n          inf: \"Create a new Gitlab Account\"\n        }],\n        GitSelection: \"\"\n      }\n    }; // this.handleClearForm = this.handleClearForm.bind(this);\n  }\n\n  saveStepData(id, data) {\n    console.log(\"data ...from step\", id, \"   \", data);\n\n    switch (id) {\n      case 1:\n        this.setState({\n          step1: data,\n          stepid: 1\n        });\n        break;\n\n      case 2:\n        this.setState({\n          step2: data,\n          stepid: 2\n        });\n        break;\n\n      case 3:\n        this.setState({\n          step3: data,\n          stepid: 3\n        });\n        break;\n    }\n  }\n\n  getInitialState(stepid) {\n    if (stepid === 1) {\n      return {\n        folderNameGitTerraformAws: \"\",\n        folderNameGitTerraformGcp: \"\",\n        templateNameGitCft: \"\",\n        folderNameGitDM: \"\",\n        mainTemplateNameGitDM: \"\",\n        projectName: \"\",\n        DeploymentEnvironmentSelection: \"\",\n        projectSelection: \"\",\n        hidden: \"true\",\n        hidden1: \"true\",\n        hidden2: \"true\",\n        urlName: \"\",\n        branchName: \"\",\n        userName: \"\",\n        passWord: \"\",\n        infraSelection: \"\",\n        accountGcpSelection: \"\",\n        accountAwsSelection: \"\",\n        ProjectNamePersonalaccGcp: \"\",\n        ProjectIDGcp: \"\",\n        ServiceAccountGcp: \"\",\n        JsonKey: null,\n        selectedFile: null,\n        loaded: 0,\n        loaded1: 0,\n        email: \"\",\n        AccountIdAws: \"\",\n        AccessKeyAws: \"\",\n        SecretAccessKeyAws: \"\",\n        TemplateSelectedOptionGcp: \"\",\n        TemplateSelectedOptionAws: \"\",\n        SourceProviderSelectionGcp: \"\",\n        SourceProviderSelectionAws: \"\",\n        TemplateUrlS3: \"\",\n        TemplateUrlGcp: \"\",\n        TerraformSelectedOptionGcp: \"\",\n        TerraformSelectedOptionAws: \"\"\n      };\n    }\n  }\n\n  render() {\n    const steps = [{\n      name: \"Configuration\",\n      component: React.createElement(FormComponent1, Object.assign({\n        saveData: this.saveStepData.bind(this),\n        clearForm: this.handleClearForm.bind(this)\n      }, this.state.step1, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }))\n    }, {\n      name: \"Security setup\",\n      component: React.createElement(FormComponent2, Object.assign({\n        saveData: this.saveStepData.bind(this)\n      }, this.state.step2, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }))\n    }, {\n      name: \"Workflow monitoring\",\n      component: React.createElement(FormComponent3, Object.assign({\n        saveData: this.saveStepData.bind(this)\n      }, this.state.step3, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }))\n    }, {\n      name: \"Provisioning\",\n      component: React.createElement(FormComponent4, Object.assign({}, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }))\n    }, {\n      name: \"Thank You\",\n      component: React.createElement(FormComponent5, Object.assign({}, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }))\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Suspense, {\n      fallback: this.loading(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(MultiStep, {\n      showNavigation: true,\n      steps: steps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => {\n        this.handleClearForm1.bind(this);\n      },\n      className: \"btn btn-outline-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Reset\"), this.state.stepid));\n  }\n\n}\n\nexport default Stepper; // test:\n// {\n//   projectName: \"\",\n//   projectTypes: [{\n//       type: \"AI / ML\",\n//       isDisabled: \"\",\n//       id: 1\n//     },\n//     {\n//       type: \"Software Development\",\n//       isDisabled: \"disabled\",\n//       id: 2\n//     },\n//     {\n//       type: \"Platform\",\n//       isDisabled: \"disabled\",\n//       id: 3\n//     },\n//     {\n//       type: \"Data Lake\",\n//       isDisabled: \"disabled\",\n//       id: 4\n//     }\n//   ],\n//   DeploymentEnvironments: [{\n//       type: \"Dev\",\n//       isDisabled: \"\",\n//       id: 1\n//     },\n//     {\n//       type: \"Test\",\n//       isDisabled: \"\",\n//       id: 2\n//     },\n//     {\n//       type: \"Prod\",\n//       isDisabled: \"\",\n//       id: 3\n//     },\n//   ],\n//   DeploymentEnvironmentSelection: \"\",\n//   projectSelection: \"\",\n//   urlName: \"\",\n//   branchName: \"\",\n//   userName: \"\",\n//   passWord: \"\",\n//   infraOptions: [{\n//       isDisabled: \"\",\n//       id: 1,\n//       inf: \"GCP\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 2,\n//       inf: \"AWS\"\n//     },\n//     {\n//       isDisabled: \"disabled\",\n//       id: 3,\n//       inf: \"azure\"\n//     }\n//   ],\n//   infraSelection: \"\",\n//   accountGcpOptions: [{\n//       isDisabled: \"\",\n//       id: 1,\n//       inf: \"Driveboard\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 2,\n//       inf: \"Personal\"\n//     }\n//   ],\n//   accountAwsOptions: [{\n//       isDisabled: \"\",\n//       id: 1,\n//       inf: \"Driveboard\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 2,\n//       inf: \"Personal\"\n//     }\n//   ],\n//   accountGcpSelection: \"\",\n//   accountAwsSelection: \"\",\n//   ProjectNamePersonalaccGcp: \"\",\n//   ProjectIDGcp: \"\",\n//   ServiceAccountGcp: \"\",\n//   hidden: \"true\",\n//   hidden1: \"true\",\n//   hidden2: \"true\",\n//   JsonKey: null,\n//   selectedFile: null,\n//   email: \"\",\n//   AccountIdAws: \"\",\n//   AccessKeyAws: \"\",\n//   SecretAccessKeyAws: \"\",\n//   AvailableOptions: [{\n//       isDisabled: \"\",\n//       id: 1,\n//       inf: \"Infrastructure Security check\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 2,\n//       inf: \"Monitoring and Reporting\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 3,\n//       inf: \"Integration with JIRA\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 4,\n//       inf: \"Compliance check \"\n//     }\n//   ],\n//   SelectedOptions: [],\n//   TemplateOptionsGcp: [{\n//       isDisabled: \"\",\n//       id: 1,\n//       inf: \"Deployment Manager\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 2,\n//       inf: \"Terraform\"\n//     }\n//   ],\n//   TemplateSelectedOptionGcp: \"\",\n//   TemplateOptionsAws: [{\n//       isDisabled: \"\",\n//       id: 1,\n//       inf: \"Cloud Formation\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 2,\n//       inf: \"Terraform\"\n//     }\n//   ],\n//   TemplateSelectedOptionAws: \"\",\n//   SourceProvidersGcp: [{\n//       isDisabled: \"\",\n//       id: 1,\n//       inf: \"Git\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 2,\n//       inf: \"Cloud Storage\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 3,\n//       inf: \"Local\"\n//     }\n//   ],\n//   SourceProviderSelectionGcp: \"\",\n//   SourceProvidersAws: [{\n//       isDisabled: \"\",\n//       id: 1,\n//       inf: \"Git\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 2,\n//       inf: \"S3\"\n//     },\n//     {\n//       isDisabled: \"\",\n//       id: 3,\n//       inf: \"Local\"\n//     }\n//   ],\n//   SourceProviderSelectionAws: \"\",\n//   TemplateUrlS3: \"\",\n//   TemplateUrlGcp: \"\"\n// },\n// saveData(childId, test1) {\n//   console.log(\"from child with id\", childId, \"  \", test1);\n//   let stateTest = [\n//     {\n//       ...this.state.test\n//     }\n//   ];\n//   console.log(\"tmp\", stateTest);\n//   stateTest.push(test1);\n//   this.setState({\n//     test: {\n//       ...this.state.test,\n//       test: stateTest\n//     }\n//   });\n//   console.log(\"in parent\", this.state.test);\n//   // console.log(\"in parent\", JSON.stringify(this.state.test));\n// }\n// displayData() {\n//   if (this.state.test[\"test\"][1])\n//     return this.state.test[\"test\"][1][\"projectName\"];\n// }","map":{"version":3,"sources":["/home/nikhil/Desktop/drivelatest/src/components/Stepper/stepper.jsx"],"names":["React","Component","Suspense","axios","FormComponent1","FormComponent2","FormComponent3","FormComponent4","FormComponent5","MultiStep","lazy","fallback","params","Stepper","constructor","props","handleClearForm","id","console","log","setState","step1","getInitialState","step2","handleClearForm1","e","preventDefault","loading","state","stepid","folderNameGitTerraformGcp","folderNameGitTerraformAws","templateNameGitCft","folderNameGitDM","mainTemplateNameGitDM","projectName","projectTypes","type","isDisabled","DeploymentEnvironments","DeploymentEnvironmentSelection","projectSelection","hidden","hidden1","hidden2","urlName","branchName","userName","passWord","infraOptions","inf","infraSelection","accountGcpOptions","accountAwsOptions","accountGcpSelection","accountAwsSelection","ProjectNamePersonalaccGcp","ProjectIDGcp","ServiceAccountGcp","JsonKey","selectedFile","loaded","loaded1","email","AccountIdAws","AccessKeyAws","SecretAccessKeyAws","TemplateOptionsGcp","TemplateSelectedOptionGcp","TerraformOptionsGcp","TerraformSelectedOptionGcp","TemplateOptionsAws","TerraformOptionsAws","TerraformSelectedOptionAws","TemplateSelectedOptionAws","SourceProvidersGcp","SourceProviderSelectionGcp","SourceProvidersAws","SourceProviderSelectionAws","TemplateUrlS3","TemplateUrlGcp","AvailableOptions","checked","SelectedOptions","step3","workFlowOptions","workFlowSelectedOptions","MonitoringOptions","MonitoringOptionSelection","JiraOptions","JiraOptionSelection","JiraUserName","JiraPassword","GitOptions","GitSelection","saveStepData","data","render","steps","name","component","bind"],"mappings":"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":["import React, { Component, Suspense } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./stepper.css\";\r\nimport FormComponent1 from \"./FormComponent1\";\r\nimport FormComponent2 from \"./FormComponent2\";\r\nimport FormComponent3 from \"./FormComponent3\";\r\nimport FormComponent4 from \"./FormComponent4\";\r\nimport FormComponent5 from \"./FormComponent5\";\r\n\r\n// const MultiStep = React.lazy(() => import(\"react-multistep\"));\r\nconst MultiStep = React.lazy(() => import(\"./multistep\"));\r\n\r\nconst fallback = params => {\r\n  return <div> fallback </div>;\r\n};\r\n\r\nclass Stepper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      stepid: 1,\r\n      step1: {\r\n        folderNameGitTerraformGcp: \"\",\r\n        folderNameGitTerraformAws: \"\",\r\n        templateNameGitCft: \"\",\r\n        folderNameGitDM: \"\",\r\n        mainTemplateNameGitDM: \"\",\r\n        projectName: \"\",\r\n        projectTypes: [\r\n          { type: \"AI / ML\", isDisabled: \"\", id: 1 },\r\n          { type: \"Software Development\", isDisabled: \"disabled\", id: 2 },\r\n          { type: \"Platform\", isDisabled: \"disabled\", id: 3 },\r\n          { type: \"Data Lake\", isDisabled: \"disabled\", id: 4 }\r\n        ],\r\n        DeploymentEnvironments: [\r\n          { type: \"Dev\", isDisabled: \"\", id: 1 },\r\n          { type: \"Test\", isDisabled: \"\", id: 2 },\r\n          { type: \"Prod\", isDisabled: \"\", id: 3 }\r\n        ],\r\n        DeploymentEnvironmentSelection: \"\",\r\n        projectSelection: \"\",\r\n        hidden: \"true\",\r\n        hidden1: \"true\",\r\n        hidden2: \"true\",\r\n        urlName: \"\",\r\n        branchName: \"\",\r\n        userName: \"\",\r\n        passWord: \"\",\r\n        infraOptions: [\r\n          { isDisabled: \"\", id: 1, inf: \"GCP\" },\r\n          { isDisabled: \"\", id: 2, inf: \"AWS\" },\r\n          { isDisabled: \"disabled\", id: 3, inf: \"Azure\" }\r\n        ],\r\n        infraSelection: \"\",\r\n        accountGcpOptions: [\r\n          { isDisabled: \"\", id: 1, inf: \"Driveboard\" },\r\n          { isDisabled: \"\", id: 2, inf: \"Personal\" }\r\n        ],\r\n        accountAwsOptions: [\r\n          { isDisabled: \"\", id: 1, inf: \"Driveboard\" },\r\n          { isDisabled: \"\", id: 2, inf: \"Personal\" }\r\n        ],\r\n        accountGcpSelection: \"\",\r\n        accountAwsSelection: \"\",\r\n        ProjectNamePersonalaccGcp: \"\",\r\n        ProjectIDGcp: \"\",\r\n        ServiceAccountGcp: \"\",\r\n        JsonKey: null,\r\n        selectedFile: null,\r\n        loaded: 0,\r\n        loaded1: 0,\r\n        email: \"\",\r\n        AccountIdAws: \"\",\r\n        AccessKeyAws: \"\",\r\n        SecretAccessKeyAws: \"\",\r\n        TemplateOptionsGcp: [\r\n          { isDisabled: \"\", id: 1, inf: \"Deployment Manager\" },\r\n          { isDisabled: \"\", id: 2, inf: \"Terraform\" }\r\n        ],\r\n        TemplateSelectedOptionGcp: \"\",\r\n        TerraformOptionsGcp: [\r\n          { isDisabled: \"\", id: 1, inf: \"Manual Upload\" },\r\n          { isDisabled: \"disabled\", id: 2, inf: \"Terraform Generator\" }\r\n        ],\r\n        TerraformSelectedOptionGcp: \"\",\r\n        TemplateOptionsAws: [\r\n          { isDisabled: \"\", id: 1, inf: \"Cloud Formation\" },\r\n          { isDisabled: \"\", id: 2, inf: \"Terraform\" }\r\n        ],\r\n        TerraformOptionsAws: [\r\n          { isDisabled: \"\", id: 1, inf: \"Manual Upload\" },\r\n          { isDisabled: \"disabled\", id: 2, inf: \"Terraform Generator\" }\r\n        ],\r\n        TerraformSelectedOptionAws: \"\",\r\n        TemplateSelectedOptionAws: \"\",\r\n        SourceProvidersGcp: [\r\n          { isDisabled: \"\", id: 1, inf: \"Git\" },\r\n          { isDisabled: \"\", id: 2, inf: \"Cloud Storage\" },\r\n          { isDisabled: \"\", id: 3, inf: \"Local\" }\r\n        ],\r\n        SourceProviderSelectionGcp: \"\",\r\n        SourceProvidersAws: [\r\n          { isDisabled: \"\", id: 1, inf: \"Git\" },\r\n          { isDisabled: \"\", id: 2, inf: \"S3\" },\r\n          { isDisabled: \"\", id: 3, inf: \"Local\" }\r\n        ],\r\n        SourceProviderSelectionAws: \"\",\r\n        TemplateUrlS3: \"\",\r\n        TemplateUrlGcp: \"\"\r\n      },\r\n      step2: {\r\n        stepid: 2,\r\n        AvailableOptions: [\r\n          {\r\n            isDisabled: \"\",\r\n            id: 1,\r\n            inf: \"Infrastructure Security check\",\r\n            checked: \"checked\"\r\n          },\r\n          {\r\n            isDisabled: \"disabled\",\r\n            id: 2,\r\n            inf: \"Code Quality Check\",\r\n            checked: \"\"\r\n          },\r\n          {\r\n            isDisabled: \"disabled\",\r\n            id: 3,\r\n            inf: \"Application Security Check\",\r\n            checked: \"\"\r\n          },\r\n          {\r\n            isDisabled: \"\",\r\n            id: 4,\r\n            inf: \"Data Security Check\",\r\n            checked: \"checked\"\r\n          },\r\n          {\r\n            isDisabled: \"\",\r\n            id: 5,\r\n            inf: \"Network Security Check\",\r\n            checked: \"checked\"\r\n          }\r\n        ],\r\n        SelectedOptions: []\r\n      },\r\n      step3: {\r\n        stepid: 3,\r\n        workFlowOptions: [\r\n          { isDisabled: \"\", id: 1, inf: \"Logging\", checked: \"checked\" },\r\n          { isDisabled: \"disabled\", id: 2, inf: \"Monitoring\", checked: \"\" },\r\n          { isDisabled: \"\", id: 3, inf: \"Integration with JIRA\", checked: \"\" },\r\n          {\r\n            isDisabled: \"disabled\",\r\n            id: 4,\r\n            inf: \"Git Provisioning\",\r\n            checked: \"\"\r\n          }\r\n        ],\r\n        workFlowSelectedOptions: [],\r\n        MonitoringOptions: [\r\n          { isDisabled: \"disabled\", id: 1, inf: \"Cloud Watch\" },\r\n          { isDisabled: \"disabled\", id: 2, inf: \"Stack Driver\" }\r\n        ],\r\n        MonitoringOptionSelection: \"\",\r\n        JiraOptions: [\r\n          {\r\n            isDisabled: \"disabled\",\r\n            id: 1,\r\n            inf: \"Add to an existing JIRA project\"\r\n          },\r\n          { isDisabled: \"\", id: 2, inf: \"Create a new JIRA project\" }\r\n        ],\r\n        JiraOptionSelection: \"\",\r\n        JiraUserName: \"\",\r\n        JiraPassword: \"\",\r\n        GitOptions: [\r\n          {\r\n            isDisabled: \"disabled\",\r\n            id: 1,\r\n            inf: \"Add an existing gitlab account\"\r\n          },\r\n          { isDisabled: \"disabled\", id: 2, inf: \"Create a new Gitlab Account\" }\r\n        ],\r\n        GitSelection: \"\"\r\n      }\r\n    };\r\n    // this.handleClearForm = this.handleClearForm.bind(this);\r\n  }\r\n\r\n  saveStepData(id, data) {\r\n    console.log(\"data ...from step\", id, \"   \", data);\r\n    switch (id) {\r\n      case 1:\r\n        this.setState({ step1: data, stepid: 1 });\r\n        break;\r\n      case 2:\r\n        this.setState({ step2: data, stepid: 2 });\r\n        break;\r\n      case 3:\r\n        this.setState({ step3: data, stepid: 3 });\r\n        break;\r\n    }\r\n  }\r\n  getInitialState(stepid) {\r\n    if (stepid === 1) {\r\n      return {\r\n        folderNameGitTerraformAws: \"\",\r\n        folderNameGitTerraformGcp: \"\",\r\n        templateNameGitCft: \"\",\r\n        folderNameGitDM: \"\",\r\n        mainTemplateNameGitDM: \"\",\r\n        projectName: \"\",\r\n        DeploymentEnvironmentSelection: \"\",\r\n        projectSelection: \"\",\r\n        hidden: \"true\",\r\n        hidden1: \"true\",\r\n        hidden2: \"true\",\r\n        urlName: \"\",\r\n        branchName: \"\",\r\n        userName: \"\",\r\n        passWord: \"\",\r\n        infraSelection: \"\",\r\n        accountGcpSelection: \"\",\r\n        accountAwsSelection: \"\",\r\n        ProjectNamePersonalaccGcp: \"\",\r\n        ProjectIDGcp: \"\",\r\n        ServiceAccountGcp: \"\",\r\n        JsonKey: null,\r\n        selectedFile: null,\r\n        loaded: 0,\r\n        loaded1: 0,\r\n        email: \"\",\r\n        AccountIdAws: \"\",\r\n        AccessKeyAws: \"\",\r\n        SecretAccessKeyAws: \"\",\r\n        TemplateSelectedOptionGcp: \"\",\r\n        TemplateSelectedOptionAws: \"\",\r\n        SourceProviderSelectionGcp: \"\",\r\n        SourceProviderSelectionAws: \"\",\r\n        TemplateUrlS3: \"\",\r\n        TemplateUrlGcp: \"\",\r\n        TerraformSelectedOptionGcp: \"\",\r\n        TerraformSelectedOptionAws: \"\"\r\n      };\r\n    }\r\n  }\r\n\r\n  handleClearForm = id => {\r\n    console.log(\"id is \", id);\r\n    switch (id) {\r\n      case 1:\r\n        this.setState({ step1: this.getInitialState(1) });\r\n        return 1;\r\n        break;\r\n      case 2:\r\n        this.setState({ step2: this.getInitialState(2) });\r\n        return 2;\r\n        break;\r\n    }\r\n  };\r\n  handleClearForm1 = e => {\r\n    e.preventDefault();\r\n\r\n    this.handleClearForm();\r\n  };\r\n\r\n  loading = () => (\r\n    <div className=\"animated fadeIn pt-1 text-center\"> Loading... </div>\r\n  );\r\n\r\n  render() {\r\n    const steps = [\r\n      {\r\n        name: \"Configuration\",\r\n        component: (\r\n          <FormComponent1\r\n            saveData={this.saveStepData.bind(this)}\r\n            clearForm={this.handleClearForm.bind(this)}\r\n            {...this.state.step1}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: \"Security setup\",\r\n        component: (\r\n          <FormComponent2\r\n            saveData={this.saveStepData.bind(this)}\r\n            {...this.state.step2}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: \"Workflow monitoring\",\r\n        component: (\r\n          <FormComponent3\r\n            saveData={this.saveStepData.bind(this)}\r\n            {...this.state.step3}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: \"Provisioning\",\r\n        component: <FormComponent4 {...this.state} />\r\n      },\r\n      {\r\n        name: \"Thank You\",\r\n        component: <FormComponent5 {...this.state} />\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Suspense fallback={this.loading()}>\r\n          <MultiStep showNavigation={true} steps={steps} />\r\n          <button\r\n            type=\"button\"\r\n            onClick={e => {\r\n              this.handleClearForm1.bind(this);\r\n            }}\r\n            className=\"btn btn-outline-warning\"\r\n          >\r\n            Reset\r\n          </button>\r\n          {this.state.stepid}\r\n        </Suspense>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stepper;\r\n\r\n// test:\r\n\r\n// {\r\n//   projectName: \"\",\r\n//   projectTypes: [{\r\n//       type: \"AI / ML\",\r\n//       isDisabled: \"\",\r\n//       id: 1\r\n//     },\r\n//     {\r\n//       type: \"Software Development\",\r\n//       isDisabled: \"disabled\",\r\n//       id: 2\r\n//     },\r\n//     {\r\n//       type: \"Platform\",\r\n//       isDisabled: \"disabled\",\r\n//       id: 3\r\n//     },\r\n//     {\r\n//       type: \"Data Lake\",\r\n//       isDisabled: \"disabled\",\r\n//       id: 4\r\n//     }\r\n//   ],\r\n//   DeploymentEnvironments: [{\r\n//       type: \"Dev\",\r\n//       isDisabled: \"\",\r\n//       id: 1\r\n//     },\r\n//     {\r\n//       type: \"Test\",\r\n//       isDisabled: \"\",\r\n//       id: 2\r\n//     },\r\n//     {\r\n//       type: \"Prod\",\r\n//       isDisabled: \"\",\r\n//       id: 3\r\n//     },\r\n//   ],\r\n//   DeploymentEnvironmentSelection: \"\",\r\n\r\n//   projectSelection: \"\",\r\n//   urlName: \"\",\r\n//   branchName: \"\",\r\n//   userName: \"\",\r\n//   passWord: \"\",\r\n//   infraOptions: [{\r\n//       isDisabled: \"\",\r\n//       id: 1,\r\n//       inf: \"GCP\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 2,\r\n//       inf: \"AWS\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"disabled\",\r\n//       id: 3,\r\n//       inf: \"azure\"\r\n//     }\r\n//   ],\r\n//   infraSelection: \"\",\r\n//   accountGcpOptions: [{\r\n//       isDisabled: \"\",\r\n//       id: 1,\r\n//       inf: \"Driveboard\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 2,\r\n//       inf: \"Personal\"\r\n//     }\r\n//   ],\r\n//   accountAwsOptions: [{\r\n//       isDisabled: \"\",\r\n//       id: 1,\r\n//       inf: \"Driveboard\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 2,\r\n//       inf: \"Personal\"\r\n//     }\r\n//   ],\r\n//   accountGcpSelection: \"\",\r\n//   accountAwsSelection: \"\",\r\n//   ProjectNamePersonalaccGcp: \"\",\r\n//   ProjectIDGcp: \"\",\r\n//   ServiceAccountGcp: \"\",\r\n//   hidden: \"true\",\r\n//   hidden1: \"true\",\r\n//   hidden2: \"true\",\r\n//   JsonKey: null,\r\n//   selectedFile: null,\r\n//   email: \"\",\r\n//   AccountIdAws: \"\",\r\n//   AccessKeyAws: \"\",\r\n//   SecretAccessKeyAws: \"\",\r\n//   AvailableOptions: [{\r\n//       isDisabled: \"\",\r\n//       id: 1,\r\n//       inf: \"Infrastructure Security check\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 2,\r\n//       inf: \"Monitoring and Reporting\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 3,\r\n//       inf: \"Integration with JIRA\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 4,\r\n//       inf: \"Compliance check \"\r\n//     }\r\n//   ],\r\n//   SelectedOptions: [],\r\n\r\n//   TemplateOptionsGcp: [{\r\n//       isDisabled: \"\",\r\n//       id: 1,\r\n//       inf: \"Deployment Manager\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 2,\r\n//       inf: \"Terraform\"\r\n//     }\r\n//   ],\r\n//   TemplateSelectedOptionGcp: \"\",\r\n//   TemplateOptionsAws: [{\r\n//       isDisabled: \"\",\r\n//       id: 1,\r\n//       inf: \"Cloud Formation\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 2,\r\n//       inf: \"Terraform\"\r\n//     }\r\n//   ],\r\n//   TemplateSelectedOptionAws: \"\",\r\n//   SourceProvidersGcp: [{\r\n//       isDisabled: \"\",\r\n//       id: 1,\r\n//       inf: \"Git\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 2,\r\n//       inf: \"Cloud Storage\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 3,\r\n//       inf: \"Local\"\r\n//     }\r\n//   ],\r\n//   SourceProviderSelectionGcp: \"\",\r\n//   SourceProvidersAws: [{\r\n//       isDisabled: \"\",\r\n//       id: 1,\r\n//       inf: \"Git\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 2,\r\n//       inf: \"S3\"\r\n//     },\r\n//     {\r\n//       isDisabled: \"\",\r\n//       id: 3,\r\n//       inf: \"Local\"\r\n//     }\r\n//   ],\r\n//   SourceProviderSelectionAws: \"\",\r\n//   TemplateUrlS3: \"\",\r\n//   TemplateUrlGcp: \"\"\r\n// },\r\n\r\n// saveData(childId, test1) {\r\n//   console.log(\"from child with id\", childId, \"  \", test1);\r\n//   let stateTest = [\r\n//     {\r\n//       ...this.state.test\r\n//     }\r\n//   ];\r\n//   console.log(\"tmp\", stateTest);\r\n//   stateTest.push(test1);\r\n//   this.setState({\r\n//     test: {\r\n//       ...this.state.test,\r\n//       test: stateTest\r\n//     }\r\n//   });\r\n//   console.log(\"in parent\", this.state.test);\r\n//   // console.log(\"in parent\", JSON.stringify(this.state.test));\r\n// }\r\n\r\n// displayData() {\r\n//   if (this.state.test[\"test\"][1])\r\n//     return this.state.test[\"test\"][1][\"projectName\"];\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}