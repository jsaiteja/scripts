{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/drivelatest/src/components/Stepper/FormComponent3.jsx\";\nimport React, { Component } from \"react\";\nimport CheckBox from \"./CheckBox\";\n\nclass FormComponent3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckChieldElement = e => {\n      let wfsOptions = this.state.workFlowSelectedOptions;\n      wfsOptions.forEach(op => {\n        if (op.inf === e.target.value) op.ischecked = e.target.checked;\n      });\n      this.setState({\n        workFlowSelectedOptions: wfsOptions\n      });\n    };\n\n    this.state = {\n      workFlowOptions: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Logging    \",\n        ischecked: true\n      }, {\n        isDisabled: \"disabled\",\n        id: 2,\n        inf: \"Monitoring    \",\n        ischecked: false\n      }, {\n        isDisabled: \"\",\n        id: 3,\n        inf: \"Integration with JIRA    \",\n        ischecked: false\n      }, {\n        isDisabled: \"disabled\",\n        id: 4,\n        inf: \"Git Provisioning    \",\n        ischecked: false\n      }],\n      workFlowSelectedOptions: [],\n      MonitoringOptions: [{\n        isDisabled: \"disabled\",\n        id: 1,\n        inf: \"Cloud Watch\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 2,\n        inf: \"Stack Driver\"\n      }],\n      MonitoringOptionSelection: \"\",\n      JiraOptions: [{\n        isDisabled: \"disabled\",\n        id: 1,\n        inf: \"Add to an existing JIRA project\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"Create a new JIRA project    \"\n      }],\n      JiraOptionSelection: \"\",\n      JiraUserName: \"\",\n      JiraPassword: \"\",\n      hidden3: \"true\",\n      GitOptions: [{\n        isDisabled: \"disabled\",\n        id: 1,\n        inf: \"Add an existing gitlab account\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 2,\n        inf: \"Create a new Gitlab Account\"\n      }],\n      GitSelection: \"\"\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.saveData(3, this.state);\n  }\n\n  componentDidMount() {\n    this.setState({\n      workFlowSelectedOptions: this.props.workFlowSelectedOptions\n    });\n    this.setState({\n      JiraOptionSelection: this.props.JiraOptionSelection\n    });\n    this.setState({\n      JiraUserName: this.props.JiraUserName\n    });\n    this.setState({\n      JiraPassword: this.props.JiraPassword\n    });\n    this.setState({\n      hidden3: this.props.hidden3\n    });\n    this.setState({\n      GitSelection: this.props.GitSelection\n    });\n    this.setState({\n      MonitoringOptionSelection: this.props.MonitoringOptionSelection\n    });\n  }\n\n  handleClearForm3(e) {\n    e.preventDefault();\n    this.setState({\n      workFlowSelectedOptions: [],\n      JiraOptionSelection: \"\",\n      JiraUserName: \"\",\n      JiraPassword: \"\",\n      GitSelection: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      className: \"w-75 bg-light text-dark offset-lg-1\",\n      validate: \"true\",\n      noValidate: true,\n      style: {\n        marginTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \" Workflow Monitoring \"), \" \"), \" \"), \" \", this.state.workFlowOptions.map((opt, i) => {\n      return React.createElement(CheckBox, Object.assign({\n        key: i,\n        handleCheckChieldElement: this.handleCheckChieldElement\n      }, opt, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }));\n    }), this.state.workFlowSelectedOptions.toString() === \"Monitoring    \" && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"30px\",\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \" \"), \" \\xA0\"), React.createElement(\"div\", {\n      className: \"form-check-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.MonitoringOptions.map((opt, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf // checked={\n        //   this.state.MonitoringOptionSelection.toString().indexOf(\n        //     opt.inf\n        //   ) > -1\n        // }\n        ,\n        checked: opt.checked,\n        onChange: e => {\n          this.setState({\n            MonitoringOptionSelection: [e.target.value]\n          });\n        },\n        type: \"radio\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), \"\\xA0\", opt.inf, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\");\n    }))), this.state.workFlowSelectedOptions.toString() === \"Git Provisioning    \" && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"30px\",\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \" \"), \" \\xA0\"), React.createElement(\"div\", {\n      className: \"form-check-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.GitOptions.map((opt, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf,\n        checked: this.state.GitSelection.toString().indexOf(opt.inf) > -1,\n        onChange: e => {\n          this.setState({\n            GitSelection: [e.target.value]\n          });\n        },\n        type: \"radio\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), \"\\xA0\", opt.inf, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\");\n    }))), this.state.workFlowSelectedOptions.toString() === \"Integration with JIRA    \" && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"30px\",\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \" \"), \" \\xA0\"), React.createElement(\"div\", {\n      className: \"form-check-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, this.state.JiraOptions.map((opt, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf,\n        checked: this.state.JiraOptionSelection.toString().indexOf(opt.inf) > -1,\n        onChange: e => {\n          this.setState({\n            JiraOptionSelection: [e.target.value]\n          });\n        },\n        type: \"radio\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), \"\\xA0\", opt.inf, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\");\n    }))), this.state.JiraOptionSelection.toString() === \"Create a new JIRA project    \" && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        width: \"770px\",\n        marginRight: \"7px\",\n        marginLeft: \"30px\",\n        marginBottom: \"11px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-form-label required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Jira Username\")), React.createElement(\"input\", {\n      className: \"form-control mb-2 mr-sm-2\",\n      type: \"text\",\n      onChange: e => this.setState({\n        JiraUserName: e.target.value\n      }),\n      placeholder: \"Enter Project Name\",\n      required: true,\n      value: this.state.JiraUserName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }))), React.createElement(\"i\", {\n      className: \"fa fa-info-circle fa-lg\",\n      style: {\n        color: \"black\"\n      },\n      title: \"Description about Jira Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        width: \"770px\",\n        marginRight: \"8px\",\n        marginLeft: \"30px\",\n        marginBottom: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-form-label required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \" Jira Password\")), React.createElement(\"input\", {\n      className: \"form-control mb-2 mr-sm-2\",\n      type: this.state.hidden3 ? \"password\" : \"text\",\n      onChange: e => {\n        this.setState({\n          JiraPassword: e.target.value\n        });\n      },\n      placeholder: \"Enter Jira Password \",\n      value: this.state.JiraPassword,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }))), this.state.hidden3 && React.createElement(\"span\", {\n      onClick: () => {\n        this.setState({\n          hidden3: !this.state.hidden3\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-eye errspan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })), !this.state.hidden3 && React.createElement(\"span\", {\n      onClick: () => {\n        this.setState({\n          hidden3: !this.state.hidden3\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-eye-close errspan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"d-flex justify-content-between ml-4 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClearForm3.bind(this),\n      className: \"btn btn-outline-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Reset\"))))));\n  }\n\n}\n\nexport default FormComponent3;","map":{"version":3,"sources":["/home/nikhil/Desktop/drivelatest/src/components/Stepper/FormComponent3.jsx"],"names":["React","Component","CheckBox","FormComponent3","constructor","props","handleCheckChieldElement","e","wfsOptions","state","workFlowSelectedOptions","forEach","op","inf","target","value","ischecked","checked","setState","workFlowOptions","isDisabled","id","MonitoringOptions","MonitoringOptionSelection","JiraOptions","JiraOptionSelection","JiraUserName","JiraPassword","hidden3","GitOptions","GitSelection","componentWillUnmount","saveData","componentDidMount","handleClearForm3","preventDefault","render","marginTop","map","opt","i","toString","marginLeft","marginRight","indexOf","display","width","marginBottom","color","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CheckBox from \"./CheckBox\";\n\nclass FormComponent3 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workFlowOptions: [\n        { isDisabled: \"\", id: 1, inf: \"Logging    \", ischecked: true },\n        {\n          isDisabled: \"disabled\",\n          id: 2,\n          inf: \"Monitoring    \",\n          ischecked: false\n        },\n        {\n          isDisabled: \"\",\n          id: 3,\n          inf: \"Integration with JIRA    \",\n          ischecked: false\n        },\n        {\n          isDisabled: \"disabled\",\n          id: 4,\n          inf: \"Git Provisioning    \",\n          ischecked: false\n        }\n      ],\n      workFlowSelectedOptions: [],\n      MonitoringOptions: [\n        { isDisabled: \"disabled\", id: 1, inf: \"Cloud Watch\" },\n        { isDisabled: \"disabled\", id: 2, inf: \"Stack Driver\" }\n      ],\n      MonitoringOptionSelection: \"\",\n      JiraOptions: [\n        {\n          isDisabled: \"disabled\",\n          id: 1,\n          inf: \"Add to an existing JIRA project\"\n        },\n        { isDisabled: \"\", id: 2, inf: \"Create a new JIRA project    \" }\n      ],\n      JiraOptionSelection: \"\",\n      JiraUserName: \"\",\n      JiraPassword: \"\",\n      hidden3: \"true\",\n      GitOptions: [\n        {\n          isDisabled: \"disabled\",\n          id: 1,\n          inf: \"Add an existing gitlab account\"\n        },\n        { isDisabled: \"disabled\", id: 2, inf: \"Create a new Gitlab Account\" }\n      ],\n      GitSelection: \"\"\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.saveData(3, this.state);\n  }\n  componentDidMount() {\n    this.setState({\n      workFlowSelectedOptions: this.props.workFlowSelectedOptions\n    });\n    this.setState({ JiraOptionSelection: this.props.JiraOptionSelection });\n    this.setState({ JiraUserName: this.props.JiraUserName });\n    this.setState({ JiraPassword: this.props.JiraPassword });\n    this.setState({ hidden3: this.props.hidden3 });\n    this.setState({ GitSelection: this.props.GitSelection });\n    this.setState({\n      MonitoringOptionSelection: this.props.MonitoringOptionSelection\n    });\n  }\n  handleClearForm3(e) {\n    e.preventDefault();\n    this.setState({\n      workFlowSelectedOptions: [],\n      JiraOptionSelection: \"\",\n      JiraUserName: \"\",\n      JiraPassword: \"\",\n      GitSelection: \"\"\n    });\n  }\n  handleCheckChieldElement = e => {\n    let wfsOptions = this.state.workFlowSelectedOptions;\n    wfsOptions.forEach(op => {\n      if (op.inf === e.target.value) op.ischecked = e.target.checked;\n    });\n\n    this.setState({\n      workFlowSelectedOptions: wfsOptions\n    });\n  };\n  render() {\n    return (\n      <>\n        <form\n          className=\"w-75 bg-light text-dark offset-lg-1\"\n          validate=\"true\"\n          noValidate\n          style={{\n            marginTop: \"50px\"\n          }}\n        >\n          <>\n            <h2>\n              <center>\n                <b> Workflow Monitoring </b>{\" \"}\n              </center>{\" \"}\n            </h2>{\" \"}\n            {/* <div className=\"form-group\">\n              <label\n                className=\"form-check-label\"\n                style={{\n                  marginLeft: \"10px\",\n                  marginRight: \"18px\"\n                }}\n              >\n                {\" \"}\n                <b> Workflow Options </b> &nbsp;{\" \"}\n              </label>{\" \"}\n              <br />\n              <br />\n              <div className=\"form-check\">\n                {\" \"} */}\n            {this.state.workFlowOptions.map((opt, i) => {\n              return (\n                <CheckBox\n                  key={i}\n                  handleCheckChieldElement={this.handleCheckChieldElement}\n                  {...opt}\n                />\n              );\n            })}\n            {this.state.workFlowSelectedOptions.toString() ===\n              \"Monitoring    \" && (\n              <div className=\"form-group\">\n                <label\n                  className=\"form-check-label\"\n                  style={{ marginLeft: \"30px\", marginRight: \"20px\" }}\n                >\n                  <b> </b> &nbsp;\n                </label>\n                <div className=\"form-check-inline \">\n                  {this.state.MonitoringOptions.map((opt, i) => {\n                    return (\n                      <label key={i} className=\"form-check-label\">\n                        <input\n                          value={opt.inf}\n                          // checked={\n                          //   this.state.MonitoringOptionSelection.toString().indexOf(\n                          //     opt.inf\n                          //   ) > -1\n                          // }\n                          checked={opt.checked}\n                          onChange={e => {\n                            this.setState({\n                              MonitoringOptionSelection: [e.target.value]\n                            });\n                          }}\n                          type=\"radio\"\n                          key={opt.id}\n                          disabled={opt.isDisabled}\n                        />\n                        &nbsp;\n                        {opt.inf}\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp; &nbsp;\n                      </label>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {this.state.workFlowSelectedOptions.toString() ===\n              \"Git Provisioning    \" && (\n              <div className=\"form-group\">\n                <label\n                  className=\"form-check-label\"\n                  style={{ marginLeft: \"30px\", marginRight: \"20px\" }}\n                >\n                  <b> </b> &nbsp;\n                </label>\n                <div className=\"form-check-inline \">\n                  {this.state.GitOptions.map((opt, i) => {\n                    return (\n                      <label key={i} className=\"form-check-label\">\n                        <input\n                          value={opt.inf}\n                          checked={\n                            this.state.GitSelection.toString().indexOf(\n                              opt.inf\n                            ) > -1\n                          }\n                          onChange={e => {\n                            this.setState({\n                              GitSelection: [e.target.value]\n                            });\n                          }}\n                          type=\"radio\"\n                          key={opt.id}\n                          disabled={opt.isDisabled}\n                        />\n                        &nbsp;\n                        {opt.inf}\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp; &nbsp;\n                      </label>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {this.state.workFlowSelectedOptions.toString() ===\n              \"Integration with JIRA    \" && (\n              <div className=\"form-group\">\n                <label\n                  className=\"form-check-label\"\n                  style={{ marginLeft: \"30px\", marginRight: \"20px\" }}\n                >\n                  <b> </b> &nbsp;\n                </label>\n                <div className=\"form-check-inline \">\n                  {this.state.JiraOptions.map((opt, i) => {\n                    return (\n                      <label key={i} className=\"form-check-label\">\n                        <input\n                          value={opt.inf}\n                          checked={\n                            this.state.JiraOptionSelection.toString().indexOf(\n                              opt.inf\n                            ) > -1\n                          }\n                          onChange={e => {\n                            this.setState({\n                              JiraOptionSelection: [e.target.value]\n                            });\n                          }}\n                          type=\"radio\"\n                          key={opt.id}\n                          disabled={opt.isDisabled}\n                        />\n                        &nbsp;\n                        {opt.inf}\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp; &nbsp;\n                      </label>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {this.state.JiraOptionSelection.toString() ===\n              \"Create a new JIRA project    \" && (\n              <>\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    width: \"770px\",\n                    marginRight: \"7px\",\n                    marginLeft: \"30px\",\n                    marginBottom: \"11px\"\n                  }}\n                >\n                  <div className=\"form-group \">\n                    <label className=\"col-form-label required\">\n                      <b>Jira Username</b>\n                    </label>\n\n                    <input\n                      className=\"form-control mb-2 mr-sm-2\"\n                      type=\"text\"\n                      onChange={e =>\n                        this.setState({ JiraUserName: e.target.value })\n                      }\n                      placeholder=\"Enter Project Name\"\n                      required\n                      value={this.state.JiraUserName}\n                    />\n                  </div>\n                </div>\n\n                <i\n                  className=\"fa fa-info-circle fa-lg\"\n                  style={{ color: \"black\" }}\n                  title=\"Description about Jira Username\"\n                ></i>\n\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    width: \"770px\",\n                    marginRight: \"8px\",\n                    marginLeft: \"30px\",\n                    marginBottom: \"10px\"\n                  }}\n                >\n                  <div className=\"form-group \">\n                    <label className=\"col-form-label required\">\n                      <b> Jira Password</b>\n                    </label>\n                    <input\n                      className=\"form-control mb-2 mr-sm-2\"\n                      type={this.state.hidden3 ? \"password\" : \"text\"}\n                      onChange={e => {\n                        this.setState({\n                          JiraPassword: e.target.value\n                        });\n                      }}\n                      placeholder=\"Enter Jira Password \"\n                      value={this.state.JiraPassword}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {this.state.hidden3 && (\n                  <span\n                    onClick={() => {\n                      this.setState({\n                        hidden3: !this.state.hidden3\n                      });\n                    }}\n                  >\n                    <i className=\"fa fa-eye errspan\"></i>\n                  </span>\n                )}\n\n                {!this.state.hidden3 && (\n                  <span\n                    onClick={() => {\n                      this.setState({\n                        hidden3: !this.state.hidden3\n                      });\n                    }}\n                  >\n                    <i className=\"icon-eye-close errspan\"></i>\n                  </span>\n                )}\n\n                <div className=\"d-flex justify-content-between ml-4 mb-3\">\n                  <button\n                    type=\"button\"\n                    onClick={this.handleClearForm3.bind(this)}\n                    className=\"btn btn-outline-warning\"\n                  >\n                    Reset\n                  </button>\n                </div>\n              </>\n            )}\n          </>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default FormComponent3;\n"]},"metadata":{},"sourceType":"module"}