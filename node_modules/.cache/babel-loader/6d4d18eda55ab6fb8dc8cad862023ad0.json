{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/drivelatest/src/components/Stepper/FormComponent2.jsx\";\nimport React, { Component } from \"react\";\n\nclass FormComponent2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AvailableOptions: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Infrastructure Security check\",\n        checked: \"checked\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 2,\n        inf: \"Code Quality Check\",\n        checked: \"\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 3,\n        inf: \"Application Security Check\",\n        checked: \"\"\n      }, {\n        isDisabled: \"\",\n        id: 4,\n        inf: \"Data Security Check\",\n        checked: \"checked\"\n      }, {\n        isDisabled: \"\",\n        id: 5,\n        inf: \"Network Security Check\",\n        checked: \"checked\"\n      }],\n      SelectedOptions: []\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.saveData(2, this.state);\n  }\n\n  componentDidMount() {\n    this.setState({\n      SelectedOptions: this.props.SelectedOptions\n    });\n  }\n\n  handleClearForm2(e) {\n    e.preventDefault();\n    this.setState({\n      SelectedOptions: []\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      className: \"w-75 bg-light text-dark offset-lg-1\",\n      validate: \"true\",\n      noValidate: true,\n      style: {\n        marginTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Security Setup \"), \" \"), \" \"), \" \", React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"18px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Security Setup \"), \" \\xA0\", \" \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" \", this.state.AvailableOptions.map(opt => {\n      return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        key: opt.id,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf // checked={\n        //   this.state.SelectedOptions.toString().indexOf(\n        //     opt.inf\n        //   ) > -1\n        // }\n        ,\n        checked: opt.checked,\n        onChange: e => {\n          let newSelection = e.target.value;\n          let newSelectionArray;\n\n          if (this.state.SelectedOptions.indexOf(e.target.value) > -1) {\n            newSelectionArray = [this.state.SelectedOptions.filter(s => s !== newSelection)];\n          } else {\n            newSelectionArray = [...this.state.SelectedOptions, newSelection];\n          }\n\n          this.setState({\n            SelectedOptions: newSelectionArray\n          });\n        },\n        type: \"checkbox\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), \" \", \"\\xA0 \", opt.inf, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0\", \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), \" \");\n    }), \" \"), \" \"), \" \", React.createElement(\"div\", {\n      className: \"d-flex justify-content-between ml-4 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClearForm2.bind(this),\n      className: \"btn btn-outline-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Reset\"))), \" \");\n  }\n\n}\n\n{\n  /* <label>lastName</label>\r\n                  <input type=\"text\" onKeyUp={(e) => {\r\n                      this.setState({\r\n                          firstName: e.target.value\r\n                      })\r\n                  }} />\r\n                  <button onClick={() => { this.props.saveData(this.state.firstName) }}>Next</button>\r\n              </div> */\n}\nexport default FormComponent2; // saveData(test1) {\n//   console.log(\"from child\", test1)\n//   let stateTest = [\n//     ...this.state.test\n//   ]\n//   console.log(\"tmp\", stateTest)\n//   stateTest.push(test1)\n//   this.setState({\n//     test: [\n//       ...this.state.test,\n//       test: stateTest\n//     ]\n//   })\n//   console.log(\"in parent\", this.state.test)\n// }","map":{"version":3,"sources":["/home/nikhil/Desktop/drivelatest/src/components/Stepper/FormComponent2.jsx"],"names":["React","Component","FormComponent2","constructor","props","state","AvailableOptions","isDisabled","id","inf","checked","SelectedOptions","componentWillUnmount","saveData","componentDidMount","setState","handleClearForm2","e","preventDefault","render","marginTop","marginLeft","marginRight","map","opt","newSelection","target","value","newSelectionArray","indexOf","filter","s","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass FormComponent2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AvailableOptions: [\r\n        {\r\n          isDisabled: \"\",\r\n          id: 1,\r\n          inf: \"Infrastructure Security check\",\r\n          checked: \"checked\"\r\n        },\r\n        {\r\n          isDisabled: \"disabled\",\r\n          id: 2,\r\n          inf: \"Code Quality Check\",\r\n          checked: \"\"\r\n        },\r\n        {\r\n          isDisabled: \"disabled\",\r\n          id: 3,\r\n          inf: \"Application Security Check\",\r\n          checked: \"\"\r\n        },\r\n        {\r\n          isDisabled: \"\",\r\n          id: 4,\r\n          inf: \"Data Security Check\",\r\n          checked: \"checked\"\r\n        },\r\n        {\r\n          isDisabled: \"\",\r\n          id: 5,\r\n          inf: \"Network Security Check\",\r\n          checked: \"checked\"\r\n        }\r\n      ],\r\n      SelectedOptions: []\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.saveData(2, this.state);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ SelectedOptions: this.props.SelectedOptions });\r\n  }\r\n  handleClearForm2(e) {\r\n    e.preventDefault();\r\n    this.setState({ SelectedOptions: [] });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <form\r\n          className=\"w-75 bg-light text-dark offset-lg-1\"\r\n          validate=\"true\"\r\n          noValidate\r\n          style={{\r\n            marginTop: \"50px\"\r\n          }}\r\n        >\r\n          <h2>\r\n            <center>\r\n              <b> Security Setup </b>{\" \"}\r\n            </center>{\" \"}\r\n          </h2>{\" \"}\r\n          <div className=\"form-group\">\r\n            <label\r\n              className=\"form-check-label\"\r\n              style={{\r\n                marginLeft: \"10px\",\r\n                marginRight: \"18px\"\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <b> Security Setup </b> &nbsp;{\" \"}\r\n            </label>{\" \"}\r\n            <br />\r\n            <br />\r\n            <div className=\"form-check\">\r\n              {\" \"}\r\n              {this.state.AvailableOptions.map(opt => {\r\n                return (\r\n                  <>\r\n                    <br />\r\n                    <label key={opt.id} className=\"form-check-label\">\r\n                      <input\r\n                        value={opt.inf}\r\n                        // checked={\r\n                        //   this.state.SelectedOptions.toString().indexOf(\r\n                        //     opt.inf\r\n                        //   ) > -1\r\n                        // }\r\n                        checked={opt.checked}\r\n                        onChange={e => {\r\n                          let newSelection = e.target.value;\r\n                          let newSelectionArray;\r\n                          if (\r\n                            this.state.SelectedOptions.indexOf(e.target.value) >\r\n                            -1\r\n                          ) {\r\n                            newSelectionArray = [\r\n                              this.state.SelectedOptions.filter(\r\n                                s => s !== newSelection\r\n                              )\r\n                            ];\r\n                          } else {\r\n                            newSelectionArray = [\r\n                              ...this.state.SelectedOptions,\r\n                              newSelection\r\n                            ];\r\n                          }\r\n                          this.setState({\r\n                            SelectedOptions: newSelectionArray\r\n                          });\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        key={opt.id}\r\n                        disabled={opt.isDisabled}\r\n                      />{\" \"}\r\n                      &nbsp; {opt.inf}\r\n                      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{\" \"}\r\n                      <br />\r\n                      <br />\r\n                    </label>{\" \"}\r\n                  </>\r\n                );\r\n              })}{\" \"}\r\n            </div>{\" \"}\r\n          </div>{\" \"}\r\n          <div className=\"d-flex justify-content-between ml-4 mb-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.handleClearForm2.bind(this)}\r\n              className=\"btn btn-outline-warning\"\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </form>{\" \"}\r\n      </>\r\n    );\r\n  }\r\n}\r\n{\r\n  /* <label>lastName</label>\r\n                  <input type=\"text\" onKeyUp={(e) => {\r\n                      this.setState({\r\n                          firstName: e.target.value\r\n                      })\r\n                  }} />\r\n                  <button onClick={() => { this.props.saveData(this.state.firstName) }}>Next</button>\r\n              </div> */\r\n}\r\n\r\nexport default FormComponent2;\r\n\r\n// saveData(test1) {\r\n//   console.log(\"from child\", test1)\r\n//   let stateTest = [\r\n//     ...this.state.test\r\n//   ]\r\n//   console.log(\"tmp\", stateTest)\r\n//   stateTest.push(test1)\r\n//   this.setState({\r\n//     test: [\r\n//       ...this.state.test,\r\n//       test: stateTest\r\n//     ]\r\n//   })\r\n\r\n//   console.log(\"in parent\", this.state.test)\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}