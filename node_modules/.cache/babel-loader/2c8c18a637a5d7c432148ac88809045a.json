{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/drivelatest/src/components/Main.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport FormComponent1 from \"./oldFormComponent1\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n    this.validUrlRegex = RegExp(/^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/);\n    this.regex = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/gm;\n    this.validS3Url = /^(http[s]?:\\/\\/){0,1}(s3-|s3\\.)?(.*)\\.amazonaws\\.com/g;\n    this.validGcpUrl = /(http[s]?:\\/\\/)?[^\\s([\"<,>]*\\.[^\\s[\",><]*/gim;\n\n    this.nextStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.showStep = () => {\n      const step = this.state.step;\n      const _this$state = this.state,\n            projectName = _this$state.projectName,\n            projectSelection = _this$state.projectSelection,\n            urlName = _this$state.urlName,\n            branchName = _this$state.branchName,\n            userName = _this$state.userName,\n            passWord = _this$state.passWord,\n            infraSelection = _this$state.infraSelection,\n            email = _this$state.email,\n            SelectedOptions = _this$state.SelectedOptions,\n            TemplateSelectedOptionGcp = _this$state.TemplateSelectedOptionGcp,\n            TemplateSelectedOptionAws = _this$state.TemplateSelectedOptionAws,\n            SourceProviderSelectionAws = _this$state.SourceProviderSelectionAws,\n            SourceProviderSelectionGcp = _this$state.SourceProviderSelectionGcp,\n            TemplateUrlGcp = _this$state.TemplateUrlGcp,\n            TemplateUrlAws = _this$state.TemplateUrlAws,\n            selectedFile = _this$state.selectedFile,\n            projectTypes = _this$state.projectTypes,\n            infraOptions = _this$state.infraOptions,\n            TemplateOptionsGcp = _this$state.TemplateOptionsGcp,\n            SourceProvidersGcp = _this$state.SourceProvidersGcp,\n            TemplateOptionsAws = _this$state.TemplateOptionsAws,\n            SourceProvidersAws = _this$state.SourceProvidersAws,\n            AvailableOptions = _this$state.AvailableOptions,\n            hidden = _this$state.hidden,\n            errors = _this$state.errors;\n      const values = {\n        projectName,\n        projectSelection,\n        urlName,\n        branchName,\n        userName,\n        passWord,\n        infraSelection,\n        email,\n        SelectedOptions,\n        TemplateSelectedOptionGcp,\n        TemplateSelectedOptionAws,\n        SourceProviderSelectionAws,\n        SourceProviderSelectionGcp,\n        TemplateUrlGcp,\n        TemplateUrlAws,\n        selectedFile,\n        projectTypes,\n        infraOptions,\n        TemplateOptionsGcp,\n        SourceProvidersGcp,\n        TemplateOptionsAws,\n        SourceProvidersAws,\n        AvailableOptions,\n        hidden,\n        errors\n      };\n\n      switch (step) {\n        case 1:\n          return React.createElement(FormComponent1, {\n            nextStep: this.nextStep.bind(this),\n            toggleShow: this.toggleShow.bind(this),\n            handleEmailChange: this.handleEmailChange.bind(this),\n            handleRepoPasswordChange: this.handleRepoPasswordChange.bind(this),\n            handleClearForm: this.handleClearForm.bind(this),\n            handleinfraSelectionChange: this.handleinfraSelectionChange.bind(this),\n            handleRepoUserNameChange: this.handleRepoUserNameChange.bind(this),\n            handleBranchNameChange: this.handleBranchNameChange.bind(this),\n            urlNameChange: this.urlNameChange.bind(this),\n            handleProjectTypeSelect: this.handleProjectTypeSelect.bind(this),\n            handleProjectNameChange: this.handleProjectNameChange.bind(this),\n            urlTempNameChange: this.urlTempNameChange.bind(this),\n            handleProviderSelection: this.handleProviderSelection.bind(this),\n            handleTemplateSelection: this.handleTemplateSelection.bind(this),\n            handleCheckSelectionChange: this.handleCheckSelectionChange.bind(this),\n            handleFormSubmit: this.handleFormSubmit.bind(this),\n            values: values,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379\n            },\n            __self: this\n          });\n        // case 2:\n        //   return <FormComponent2 />;\n        // case 3:\n        //   return <FormComponent3 />;\n        // case 4:\n        //   return <FormComponent4 />;\n        // case 5:\n        //   return <FormComponent5 />;\n      }\n    };\n\n    this.state = {\n      step: 1,\n      errors: {\n        emailr: \"\",\n        passwordr: \"\",\n        urlr: \"\",\n        urlGCP: \"\",\n        urls3: \"\"\n      },\n      projectName: \"\",\n      hidden: \"true\",\n      projectTypes: [{\n        type: \"AI / ML\",\n        isDisabled: \"\",\n        id: 1\n      }, {\n        type: \"Software Development\",\n        isDisabled: \"disabled\",\n        id: 2\n      }, {\n        type: \"Platform\",\n        isDisabled: \"disabled\",\n        id: 3\n      }, {\n        type: \"Data Lake\",\n        isDisabled: \"disabled\",\n        id: 4\n      }],\n      projectSelection: \"\",\n      urlName: \"\",\n      branchName: \"\",\n      userName: \"\",\n      passWord: \"\",\n      infraOptions: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"GCP\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"AWS\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 3,\n        inf: \"Azure\"\n      }],\n      infraSelection: \"\",\n      email: \"\",\n      AvailableOptions: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Infrastructure Security check\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"Monitoring and Reporting\"\n      }, {\n        isDisabled: \"\",\n        id: 3,\n        inf: \"Integration with JIRA\"\n      }, {\n        isDisabled: \"\",\n        id: 4,\n        inf: \"Compliance check \"\n      }],\n      SelectedOptions: [],\n      TemplateOptionsGcp: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Deployment Manager\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"Terraform\"\n      }],\n      TemplateSelectedOptionGcp: \"\",\n      TemplateOptionsAws: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Cloud Formation\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"Terraform\"\n      }],\n      TemplateSelectedOptionAws: \"\",\n      SourceProvidersGcp: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Git\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"Cloud Storage\"\n      }, {\n        isDisabled: \"\",\n        id: 3,\n        inf: \"Local\"\n      }],\n      SourceProviderSelectionGcp: \"\",\n      SourceProvidersAws: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Git\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"S3\"\n      }, {\n        isDisabled: \"\",\n        id: 3,\n        inf: \"Local\"\n      }],\n      SourceProviderSelectionAws: \"\",\n      TemplateUrlS3: \"\",\n      TemplateUrlGcp: \"\",\n      workFlowOptions: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Logging\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"Monitoring\"\n      }, {\n        isDisabled: \"\",\n        id: 3,\n        inf: \"Integration with JIRA\"\n      }, {\n        isDisabled: \"\",\n        id: 4,\n        inf: \"Git Provisioning\"\n      }],\n      workFlowSelectedOptions: [],\n      MonitoringOptions: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Health Checks\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"Stack Driver\"\n      }],\n      MonitoringOptionSelection: \"\",\n      JiraOptions: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Add an existing JIRA account\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"Create a new JIRA account\"\n      }],\n      JiraOptionSelection: \"\"\n    };\n    this.handleCheckSelectionChange = this.handleCheckSelectionChange.bind(this);\n    this.handleTemplateSelection = this.handleTemplateSelection.bind(this);\n    this.handleProviderSelection = this.handleProviderSelection.bind(this);\n    this.urlTempNameChange = this.urlTempNameChange.bind(this);\n    this.handleProjectNameChange = this.handleProjectNameChange.bind(this);\n    this.handleProjectTypeSelect = this.handleProjectTypeSelect.bind(this);\n    this.urlNameChange = this.urlNameChange.bind(this);\n    this.handleBranchNameChange = this.handleBranchNameChange.bind(this);\n    this.handleRepoUserNameChange = this.handleRepoUserNameChange.bind(this);\n    this.handleinfraSelectionChange = this.handleinfraSelectionChange.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleRepoPasswordChange = this.handleRepoPasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.toggleShow = this.toggleShow.bind(this);\n  }\n\n  toggleShow() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  }\n\n  handleClearForm(e) {\n    console.log(\"in clear\");\n\n    if (e) {\n      e.preventDefault();\n    }\n\n    this.setState({\n      projectName: \"\",\n      projectSelection: \"\",\n      PurposeSelection: [],\n      urlName: \"\",\n      branchName: \"\",\n      userName: \"\",\n      passWord: \"\",\n      infraSelection: [],\n      email: \"\",\n      SelectedOptions: [],\n      TemplateSelectedOptionGcp: [],\n      TemplateSelectedOptionAws: [],\n      SourceProviderSelectionAws: [],\n      SourceProviderSelectionGcp: [],\n      TemplateUrlGcp: \"\",\n      TemplateUrlAws: \"\",\n      selectedFile: null\n    });\n  }\n\n  handleProjectNameChange(e) {\n    this.setState({\n      projectName: e.target.value\n    });\n    console.log(this.state.projectName);\n  }\n\n  handleProjectTypeSelect(e) {\n    this.setState({\n      projectSelection: e.target.value\n    });\n    console.log(this.state.projectSelection);\n  }\n\n  urlNameChange(e) {\n    this.setState({\n      urlName: e.target.value\n    });\n    console.log(this.state.urlName);\n    console.log(this.state.email);\n    let errors = this.state.errors;\n    let validUrl = new RegExp(this.validUrlRegex);\n    errors.urlr = validUrl.test(e.target.value) ? \"\" : \"Url is not valid!\";\n    this.setState({\n      errors,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleBranchNameChange(e) {\n    this.setState({\n      branchName: e.target.value\n    });\n    console.log(this.state.branchName);\n  }\n\n  handleRepoUserNameChange(e) {\n    this.setState({\n      userName: e.target.value\n    });\n    console.log(this.state.userName);\n  }\n\n  handleRepoPasswordChange(e) {\n    this.setState({\n      passWord: e.target.value\n    });\n    console.log(this.state.passWord);\n    let errors = this.state.errors;\n    errors.passwordr = e.target.value.length < 8 ? \"Password must be atleast 8 characters long!\" : \"\";\n    this.setState({\n      errors,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleEmailChange(e) {\n    console.log(this.state.email);\n    let errors = this.state.errors;\n    errors.emailr = this.validEmailRegex.test(e.target.value) ? \"\" : \"Email is not valid!\";\n    this.setState({\n      email: e.target.value\n    });\n    this.setState({\n      errors,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleinfraSelectionChange(e) {\n    // console.log(this.state.infraSelection);\n    // e.preventDefault();\n    console.log(\"infra selection\", e.target.value);\n    this.setState({\n      infraSelection: [e.target.value]\n    });\n  }\n\n  handleTemplateSelection(e) {\n    if (this.state.infraSelection.toString() === \"GCP\") {\n      this.setState({\n        TemplateSelectedOptionGcp: e.target.value\n      });\n    } else if (this.state.infraSelection.toString() === \"AWS\") {\n      this.setState({\n        TemplateSelectedOptionAws: e.target.value\n      });\n    }\n  }\n\n  handleProviderSelection(e) {\n    console.log(e.target.value);\n\n    if (this.state.infraSelection.toString() === \"GCP\") {\n      this.setState({\n        SourceProviderSelectionGcp: e.target.value\n      });\n      this.setState({\n        SourceProviderSelectionAws: []\n      });\n    } else if (this.state.infraSelection.toString() === \"AWS\") {\n      this.setState({\n        SourceProviderSelectionAws: e.target.value\n      });\n      this.setState({\n        SourceProviderSelectionGcp: []\n      });\n    } // console.log(\"In provider selection\", this.state.SourceProviderSelectionGcp);\n\n\n    console.log(\"In provider selection\", this.state.SourceProviderSelectionAws);\n  }\n\n  // http://BUCKET_NAME.storage.googleapis.com/OBJECT_NAME\n  // http://storage.googleapis.com/BUCKET_NAME/OBJECT_NAME\n  urlTempNameChange(e) {\n    if (this.state.infraSelection.toString() === \"GCP\") {\n      this.setState({\n        TemplateUrlGcp: e.target.value\n      });\n      let errors = this.state.errors;\n      let validUrl = new RegExp(this.validGcpUrl);\n      errors.urlGCP = validUrl.test(e.target.value) ? \"\" : \"GCS Url is not valid!\";\n      this.setState({\n        errors,\n        [e.target.name]: e.target.value\n      });\n    } else if (this.state.infraSelection.toString() === \"AWS\") {\n      this.setState({\n        TemplateUrlAws: e.target.value\n      });\n      let errors = this.state.errors;\n      let validUrl = new RegExp(this.validS3Url);\n      errors.urls3 = validUrl.test(e.target.value) ? \"\" : \"S3 Url is not valid!\";\n      this.setState({\n        errors,\n        [e.target.name]: e.target.value\n      });\n    }\n  }\n\n  handleCheckSelectionChange(e) {\n    const newSelection = e.target.value;\n    let newSelectionArray;\n\n    if (this.state.SelectedOptions.indexOf(newSelection) > -1) {\n      newSelectionArray = [this.state.SelectedOptions.filter(s => s !== newSelection)];\n    } else {\n      newSelectionArray = [...this.state.SelectedOptions, newSelection];\n    }\n\n    this.setState({\n      SelectedOptions: newSelectionArray\n    }); // console.log(\"selected check options\" + this.state.SelectedOptions);\n    // console.log(\"type is \" + typeof this.state.SelectedOptions);\n    // console.log(\"instance \" + this.state.SelectedOptions instanceof Array);\n  }\n\n  handleFormSubmit(e) {\n    console.log(\"in submit\"); // if (!this.canBeSubmitted()) {\n    //   e.preventDefault();\n    //   return;\n    // }\n\n    e.preventDefault();\n    const formPayload = {\n      projectName: this.state.projectName,\n      projectSelection: this.state.projectSelection,\n      urlName: this.state.urlName,\n      branchName: this.state.branchName,\n      userName: this.state.userName,\n      passWord: this.state.passWord,\n      infraSelection: this.state.infraSelection,\n      email: this.state.email,\n      SelectedOptions: this.state.SelectedOptions,\n      SourceProviderSelectionAws: this.state.SourceProviderSelectionAws,\n      SourceProviderSelectionGcp: this.state.SourceProviderSelectionGcp,\n      TemplateUrlGcp: this.state.TemplateUrlGcp,\n      TemplateUrlAws: this.state.TemplateUrlAws,\n      selectedFile: this.state.selectedFile\n    };\n    console.log(\"Send this in a POST request:\", formPayload);\n    console.log(JSON.stringify(formPayload));\n    axios.post( // `https://jsonplaceholder.typicode.com/users`,\n    `http://54.210.14.89:8000/serverinput/`, // { crossDomain: true },\n    {\n      formPayload\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n    }); // this.handleClearForm();\n\n    alert(\"Form have been Submitted successfully ....................... Please wait for few minutes\");\n  }\n\n  render() {\n    const step = this.state.step;\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \"Step \", step, \" of 5\"), this.showStep());\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/nikhil/Desktop/drivelatest/src/components/Main.jsx"],"names":["React","Component","axios","FormComponent1","Main","constructor","props","validEmailRegex","RegExp","validUrlRegex","regex","validS3Url","validGcpUrl","nextStep","step","state","setState","prevStep","showStep","projectName","projectSelection","urlName","branchName","userName","passWord","infraSelection","email","SelectedOptions","TemplateSelectedOptionGcp","TemplateSelectedOptionAws","SourceProviderSelectionAws","SourceProviderSelectionGcp","TemplateUrlGcp","TemplateUrlAws","selectedFile","projectTypes","infraOptions","TemplateOptionsGcp","SourceProvidersGcp","TemplateOptionsAws","SourceProvidersAws","AvailableOptions","hidden","errors","values","bind","toggleShow","handleEmailChange","handleRepoPasswordChange","handleClearForm","handleinfraSelectionChange","handleRepoUserNameChange","handleBranchNameChange","urlNameChange","handleProjectTypeSelect","handleProjectNameChange","urlTempNameChange","handleProviderSelection","handleTemplateSelection","handleCheckSelectionChange","handleFormSubmit","emailr","passwordr","urlr","urlGCP","urls3","type","isDisabled","id","inf","TemplateUrlS3","workFlowOptions","workFlowSelectedOptions","MonitoringOptions","MonitoringOptionSelection","JiraOptions","JiraOptionSelection","e","console","log","preventDefault","PurposeSelection","target","value","validUrl","test","name","length","toString","newSelection","newSelectionArray","indexOf","filter","s","formPayload","JSON","stringify","post","then","res","data","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport FormComponent1 from \"./oldFormComponent1\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n      errors: {\n        emailr: \"\",\n        passwordr: \"\",\n        urlr: \"\",\n        urlGCP: \"\",\n        urls3: \"\"\n      },\n      projectName: \"\",\n      hidden: \"true\",\n      projectTypes: [\n        { type: \"AI / ML\", isDisabled: \"\", id: 1 },\n        { type: \"Software Development\", isDisabled: \"disabled\", id: 2 },\n        { type: \"Platform\", isDisabled: \"disabled\", id: 3 },\n        { type: \"Data Lake\", isDisabled: \"disabled\", id: 4 }\n      ],\n      projectSelection: \"\",\n      urlName: \"\",\n      branchName: \"\",\n      userName: \"\",\n      passWord: \"\",\n      infraOptions: [\n        { isDisabled: \"\", id: 1, inf: \"GCP\" },\n        { isDisabled: \"\", id: 2, inf: \"AWS\" },\n        { isDisabled: \"disabled\", id: 3, inf: \"Azure\" }\n      ],\n      infraSelection: \"\",\n      email: \"\",\n      AvailableOptions: [\n        { isDisabled: \"\", id: 1, inf: \"Infrastructure Security check\" },\n        { isDisabled: \"\", id: 2, inf: \"Monitoring and Reporting\" },\n        { isDisabled: \"\", id: 3, inf: \"Integration with JIRA\" },\n        { isDisabled: \"\", id: 4, inf: \"Compliance check \" }\n      ],\n      SelectedOptions: [],\n\n      TemplateOptionsGcp: [\n        { isDisabled: \"\", id: 1, inf: \"Deployment Manager\" },\n        { isDisabled: \"\", id: 2, inf: \"Terraform\" }\n      ],\n      TemplateSelectedOptionGcp: \"\",\n      TemplateOptionsAws: [\n        { isDisabled: \"\", id: 1, inf: \"Cloud Formation\" },\n        { isDisabled: \"\", id: 2, inf: \"Terraform\" }\n      ],\n      TemplateSelectedOptionAws: \"\",\n      SourceProvidersGcp: [\n        { isDisabled: \"\", id: 1, inf: \"Git\" },\n        { isDisabled: \"\", id: 2, inf: \"Cloud Storage\" },\n        { isDisabled: \"\", id: 3, inf: \"Local\" }\n      ],\n      SourceProviderSelectionGcp: \"\",\n      SourceProvidersAws: [\n        { isDisabled: \"\", id: 1, inf: \"Git\" },\n        { isDisabled: \"\", id: 2, inf: \"S3\" },\n        { isDisabled: \"\", id: 3, inf: \"Local\" }\n      ],\n      SourceProviderSelectionAws: \"\",\n      TemplateUrlS3: \"\",\n      TemplateUrlGcp: \"\",\n      workFlowOptions: [\n        { isDisabled: \"\", id: 1, inf: \"Logging\" },\n        { isDisabled: \"\", id: 2, inf: \"Monitoring\" },\n        { isDisabled: \"\", id: 3, inf: \"Integration with JIRA\" },\n        { isDisabled: \"\", id: 4, inf: \"Git Provisioning\" }\n      ],\n      workFlowSelectedOptions: [],\n      MonitoringOptions: [\n        { isDisabled: \"\", id: 1, inf: \"Health Checks\" },\n        { isDisabled: \"\", id: 2, inf: \"Stack Driver\" }\n      ],\n      MonitoringOptionSelection: \"\",\n      JiraOptions: [\n        { isDisabled: \"\", id: 1, inf: \"Add an existing JIRA account\" },\n        { isDisabled: \"\", id: 2, inf: \"Create a new JIRA account\" }\n      ],\n      JiraOptionSelection: \"\"\n    };\n\n    this.handleCheckSelectionChange = this.handleCheckSelectionChange.bind(\n      this\n    );\n    this.handleTemplateSelection = this.handleTemplateSelection.bind(this);\n    this.handleProviderSelection = this.handleProviderSelection.bind(this);\n    this.urlTempNameChange = this.urlTempNameChange.bind(this);\n    this.handleProjectNameChange = this.handleProjectNameChange.bind(this);\n    this.handleProjectTypeSelect = this.handleProjectTypeSelect.bind(this);\n    this.urlNameChange = this.urlNameChange.bind(this);\n    this.handleBranchNameChange = this.handleBranchNameChange.bind(this);\n    this.handleRepoUserNameChange = this.handleRepoUserNameChange.bind(this);\n    this.handleinfraSelectionChange = this.handleinfraSelectionChange.bind(\n      this\n    );\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleRepoPasswordChange = this.handleRepoPasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n\n    this.toggleShow = this.toggleShow.bind(this);\n  }\n  toggleShow() {\n    this.setState({ hidden: !this.state.hidden });\n  }\n  validEmailRegex = RegExp(\n    /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n  );\n  validUrlRegex = RegExp(\n    /^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/\n  );\n  regex = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/gm;\n\n  handleClearForm(e) {\n    console.log(\"in clear\");\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      projectName: \"\",\n      projectSelection: \"\",\n      PurposeSelection: [],\n      urlName: \"\",\n      branchName: \"\",\n      userName: \"\",\n      passWord: \"\",\n      infraSelection: [],\n      email: \"\",\n      SelectedOptions: [],\n      TemplateSelectedOptionGcp: [],\n      TemplateSelectedOptionAws: [],\n      SourceProviderSelectionAws: [],\n      SourceProviderSelectionGcp: [],\n      TemplateUrlGcp: \"\",\n      TemplateUrlAws: \"\",\n      selectedFile: null\n    });\n  }\n\n  handleProjectNameChange(e) {\n    this.setState({ projectName: e.target.value });\n    console.log(this.state.projectName);\n  }\n  handleProjectTypeSelect(e) {\n    this.setState({ projectSelection: e.target.value });\n    console.log(this.state.projectSelection);\n  }\n\n  urlNameChange(e) {\n    this.setState({ urlName: e.target.value });\n    console.log(this.state.urlName);\n    console.log(this.state.email);\n    let errors = this.state.errors;\n    let validUrl = new RegExp(this.validUrlRegex);\n    errors.urlr = validUrl.test(e.target.value) ? \"\" : \"Url is not valid!\";\n\n    this.setState({ errors, [e.target.name]: e.target.value });\n  }\n  handleBranchNameChange(e) {\n    this.setState({ branchName: e.target.value });\n    console.log(this.state.branchName);\n  }\n  handleRepoUserNameChange(e) {\n    this.setState({ userName: e.target.value });\n    console.log(this.state.userName);\n  }\n\n  handleRepoPasswordChange(e) {\n    this.setState({ passWord: e.target.value });\n    console.log(this.state.passWord);\n    let errors = this.state.errors;\n    errors.passwordr =\n      e.target.value.length < 8\n        ? \"Password must be atleast 8 characters long!\"\n        : \"\";\n    this.setState({ errors, [e.target.name]: e.target.value });\n  }\n  handleEmailChange(e) {\n    console.log(this.state.email);\n    let errors = this.state.errors;\n    errors.emailr = this.validEmailRegex.test(e.target.value)\n      ? \"\"\n      : \"Email is not valid!\";\n    this.setState({ email: e.target.value });\n    this.setState({ errors, [e.target.name]: e.target.value });\n  }\n\n  handleinfraSelectionChange(e) {\n    // console.log(this.state.infraSelection);\n    // e.preventDefault();\n\n    console.log(\"infra selection\", e.target.value);\n\n    this.setState({ infraSelection: [e.target.value] });\n  }\n  handleTemplateSelection(e) {\n    if (this.state.infraSelection.toString() === \"GCP\") {\n      this.setState({ TemplateSelectedOptionGcp: e.target.value });\n    } else if (this.state.infraSelection.toString() === \"AWS\") {\n      this.setState({ TemplateSelectedOptionAws: e.target.value });\n    }\n  }\n  handleProviderSelection(e) {\n    console.log(e.target.value);\n    if (this.state.infraSelection.toString() === \"GCP\") {\n      this.setState({ SourceProviderSelectionGcp: e.target.value });\n      this.setState({ SourceProviderSelectionAws: [] });\n    } else if (this.state.infraSelection.toString() === \"AWS\") {\n      this.setState({ SourceProviderSelectionAws: e.target.value });\n      this.setState({ SourceProviderSelectionGcp: [] });\n    }\n    // console.log(\"In provider selection\", this.state.SourceProviderSelectionGcp);\n    console.log(\"In provider selection\", this.state.SourceProviderSelectionAws);\n  }\n  validS3Url = /^(http[s]?:\\/\\/){0,1}(s3-|s3\\.)?(.*)\\.amazonaws\\.com/g;\n  validGcpUrl = /(http[s]?:\\/\\/)?[^\\s([\"<,>]*\\.[^\\s[\",><]*/gim;\n  // http://BUCKET_NAME.storage.googleapis.com/OBJECT_NAME\n\n  // http://storage.googleapis.com/BUCKET_NAME/OBJECT_NAME\n  urlTempNameChange(e) {\n    if (this.state.infraSelection.toString() === \"GCP\") {\n      this.setState({ TemplateUrlGcp: e.target.value });\n      let errors = this.state.errors;\n      let validUrl = new RegExp(this.validGcpUrl);\n      errors.urlGCP = validUrl.test(e.target.value)\n        ? \"\"\n        : \"GCS Url is not valid!\";\n      this.setState({ errors, [e.target.name]: e.target.value });\n    } else if (this.state.infraSelection.toString() === \"AWS\") {\n      this.setState({ TemplateUrlAws: e.target.value });\n      let errors = this.state.errors;\n      let validUrl = new RegExp(this.validS3Url);\n      errors.urls3 = validUrl.test(e.target.value)\n        ? \"\"\n        : \"S3 Url is not valid!\";\n      this.setState({ errors, [e.target.name]: e.target.value });\n    }\n  }\n  handleCheckSelectionChange(e) {\n    const newSelection = e.target.value;\n    let newSelectionArray;\n    if (this.state.SelectedOptions.indexOf(newSelection) > -1) {\n      newSelectionArray = [\n        this.state.SelectedOptions.filter(s => s !== newSelection)\n      ];\n    } else {\n      newSelectionArray = [...this.state.SelectedOptions, newSelection];\n    }\n\n    this.setState({ SelectedOptions: newSelectionArray });\n    // console.log(\"selected check options\" + this.state.SelectedOptions);\n    // console.log(\"type is \" + typeof this.state.SelectedOptions);\n    // console.log(\"instance \" + this.state.SelectedOptions instanceof Array);\n  }\n\n  handleFormSubmit(e) {\n    console.log(\"in submit\");\n    // if (!this.canBeSubmitted()) {\n    //   e.preventDefault();\n    //   return;\n    // }\n    e.preventDefault();\n    const formPayload = {\n      projectName: this.state.projectName,\n      projectSelection: this.state.projectSelection,\n      urlName: this.state.urlName,\n      branchName: this.state.branchName,\n      userName: this.state.userName,\n      passWord: this.state.passWord,\n      infraSelection: this.state.infraSelection,\n      email: this.state.email,\n      SelectedOptions: this.state.SelectedOptions,\n      SourceProviderSelectionAws: this.state.SourceProviderSelectionAws,\n      SourceProviderSelectionGcp: this.state.SourceProviderSelectionGcp,\n      TemplateUrlGcp: this.state.TemplateUrlGcp,\n      TemplateUrlAws: this.state.TemplateUrlAws,\n      selectedFile: this.state.selectedFile\n    };\n\n    console.log(\"Send this in a POST request:\", formPayload);\n    console.log(JSON.stringify(formPayload));\n    axios\n      .post(\n        // `https://jsonplaceholder.typicode.com/users`,\n        `http://54.210.14.89:8000/serverinput/`,\n        // { crossDomain: true },\n        { formPayload }\n      )\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    // this.handleClearForm();\n\n    alert(\n      \"Form have been Submitted successfully ....................... Please wait for few minutes\"\n    );\n  }\n\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({ step: step + 1 });\n  };\n\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({ step: step - 1 });\n  };\n\n  // handleChange = input => e => {\n  //   this.setState({ [input]: e.target.value });\n  // };\n\n  showStep = () => {\n    const { step } = this.state;\n    const {\n      projectName,\n      projectSelection,\n      urlName,\n      branchName,\n      userName,\n      passWord,\n      infraSelection,\n      email,\n      SelectedOptions,\n      TemplateSelectedOptionGcp,\n      TemplateSelectedOptionAws,\n      SourceProviderSelectionAws,\n      SourceProviderSelectionGcp,\n      TemplateUrlGcp,\n      TemplateUrlAws,\n      selectedFile,\n      projectTypes,\n      infraOptions,\n      TemplateOptionsGcp,\n      SourceProvidersGcp,\n      TemplateOptionsAws,\n      SourceProvidersAws,\n      AvailableOptions,\n      hidden,\n      errors\n    } = this.state;\n    const values = {\n      projectName,\n      projectSelection,\n      urlName,\n      branchName,\n      userName,\n      passWord,\n      infraSelection,\n      email,\n      SelectedOptions,\n      TemplateSelectedOptionGcp,\n      TemplateSelectedOptionAws,\n      SourceProviderSelectionAws,\n      SourceProviderSelectionGcp,\n      TemplateUrlGcp,\n      TemplateUrlAws,\n      selectedFile,\n      projectTypes,\n      infraOptions,\n      TemplateOptionsGcp,\n      SourceProvidersGcp,\n      TemplateOptionsAws,\n      SourceProvidersAws,\n      AvailableOptions,\n      hidden,\n      errors\n    };\n\n    switch (step) {\n      case 1:\n        return (\n          <FormComponent1\n            nextStep={this.nextStep.bind(this)}\n            toggleShow={this.toggleShow.bind(this)}\n            handleEmailChange={this.handleEmailChange.bind(this)}\n            handleRepoPasswordChange={this.handleRepoPasswordChange.bind(this)}\n            handleClearForm={this.handleClearForm.bind(this)}\n            handleinfraSelectionChange={this.handleinfraSelectionChange.bind(\n              this\n            )}\n            handleRepoUserNameChange={this.handleRepoUserNameChange.bind(this)}\n            handleBranchNameChange={this.handleBranchNameChange.bind(this)}\n            urlNameChange={this.urlNameChange.bind(this)}\n            handleProjectTypeSelect={this.handleProjectTypeSelect.bind(this)}\n            handleProjectNameChange={this.handleProjectNameChange.bind(this)}\n            urlTempNameChange={this.urlTempNameChange.bind(this)}\n            handleProviderSelection={this.handleProviderSelection.bind(this)}\n            handleTemplateSelection={this.handleTemplateSelection.bind(this)}\n            handleCheckSelectionChange={this.handleCheckSelectionChange.bind(\n              this\n            )}\n            handleFormSubmit={this.handleFormSubmit.bind(this)}\n            values={values}\n          />\n        );\n      // case 2:\n      //   return <FormComponent2 />;\n      // case 3:\n      //   return <FormComponent3 />;\n\n      // case 4:\n      //   return <FormComponent4 />;\n\n      // case 5:\n      //   return <FormComponent5 />;\n    }\n  };\n  render() {\n    const { step } = this.state;\n    return (\n      <>\n        <h2>Step {step} of 5</h2>\n        {this.showStep()}\n      </>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}