{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/drivelatest/src/components/Stepper/FormComponent3.jsx\";\nimport React, { Component } from \"react\";\n\nclass FormComponent3 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workFlowOptions: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Logging    \",\n        ischecked: true\n      }, {\n        isDisabled: \"disabled\",\n        id: 2,\n        inf: \"Monitoring    \",\n        ischecked: false\n      }, {\n        isDisabled: \"\",\n        id: 3,\n        inf: \"Integration with JIRA    \",\n        ischecked: false\n      }, {\n        isDisabled: \"disabled\",\n        id: 4,\n        inf: \"Git Provisioning    \",\n        ischecked: false\n      }],\n      workFlowSelectedOptions: [],\n      MonitoringOptions: [{\n        isDisabled: \"disabled\",\n        id: 1,\n        inf: \"Cloud Watch\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 2,\n        inf: \"Stack Driver\"\n      }],\n      MonitoringOptionSelection: \"\",\n      JiraOptions: [{\n        isDisabled: \"disabled\",\n        id: 1,\n        inf: \"Add to an existing JIRA project\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"Create a new JIRA project    \"\n      }],\n      JiraOptionSelection: \"\",\n      JiraUserName: \"\",\n      JiraPassword: \"\",\n      hidden3: \"true\",\n      GitOptions: [{\n        isDisabled: \"disabled\",\n        id: 1,\n        inf: \"Add an existing gitlab account\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 2,\n        inf: \"Create a new Gitlab Account\"\n      }],\n      GitSelection: \"\"\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.saveData(3, this.state);\n  }\n\n  componentDidMount() {\n    this.setState({\n      workFlowSelectedOptions: this.props.workFlowSelectedOptions\n    });\n    this.setState({\n      JiraOptionSelection: this.props.JiraOptionSelection\n    });\n    this.setState({\n      JiraUserName: this.props.JiraUserName\n    });\n    this.setState({\n      JiraPassword: this.props.JiraPassword\n    });\n    this.setState({\n      hidden3: this.props.hidden3\n    });\n    this.setState({\n      GitSelection: this.props.GitSelection\n    });\n    this.setState({\n      MonitoringOptionSelection: this.props.MonitoringOptionSelection\n    });\n  }\n\n  handleClearForm3(e) {\n    e.preventDefault();\n    this.setState({\n      workFlowSelectedOptions: [],\n      JiraOptionSelection: \"\",\n      JiraUserName: \"\",\n      JiraPassword: \"\",\n      GitSelection: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      className: \"w-75 bg-light text-dark offset-lg-1\",\n      validate: \"true\",\n      noValidate: true,\n      style: {\n        marginTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" Workflow Monitoring \"), \" \"), \" \"), \" \", React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"18px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \" Workflow Options \"), \" \\xA0\", \" \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" \", this.state.workFlowOptions.map(opt => {\n      return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        key: opt.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        key: opt.id,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        key: opt.id,\n        value: opt.inf,\n        checked: opt.ischecked,\n        onClick: e => {\n          let wfsOptions = this.state.workFlowSelectedOptions;\n          wfsOptions.forEach(op => {\n            if (op.opt.inf === e.target.value) op.opt.ischecked = e.target.checked;\n          });\n          this.setState({\n            workFlowSelectedOptions: wfsOptions\n          });\n        } // checked={\n        //   this.state.workFlowSelectedOptions\n        //     .toString()\n        //     .indexOf(opt.inf) > -1\n        // }\n        // onChange={e => {\n        //   let newSelection = e.target.value;\n        //   let newSelectionArray;\n        //   if (e.target.checked) {\n        //     newSelectionArray = [\n        //       this.state.workFlowSelectedOptions.filter(\n        //         s => s !== newSelection\n        //       )\n        //     ];\n        //   }\n        // this.setState({})\n        // this.state.workFlowSelectedOptions.push(\n        //   opt.inf\n        // );\n        // else {\n        //   newSelectionArray = [\n        //     ...this.state.workFlowSelectedOptions,\n        //     newSelection\n        //   ];\n        // }\n        //   const idx = this.state.workFlowSelectedOptions.indexOf(\n        //     opt.inf\n        //   );\n        //   this.state.workFlowSelectedOptions.remove(idx);\n        // }\n        // }}\n        // onChange={e => {\n        //   let newSelection = e.target.value;\n        //   let newSelectionArray;\n        //   if (\n        //     this.state.workFlowSelectedOptions.indexOf(\n        //       e.target.value\n        //     ) > -1\n        //   ) {\n        //     newSelectionArray = [\n        //       this.state.workFlowSelectedOptions.filter(\n        //         s => s !== newSelection\n        //       )\n        //     ];\n        //   } else {\n        //     newSelectionArray = [\n        //       ...this.state.workFlowSelectedOptions,\n        //       newSelection\n        //     ];\n        //   }\n        //   this.setState({\n        //     workFlowSelectedOptions: newSelectionArray\n        //   });\n        // }}\n        ,\n        type: \"checkbox\",\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), \" \", \"\\xA0 \", opt.inf, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })), \" \"));\n    }), \" \"), \" \"), \" \", this.state.workFlowSelectedOptions.toString() === \"Monitoring    \" && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"30px\",\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \" \"), \" \\xA0\"), React.createElement(\"div\", {\n      className: \"form-check-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, this.state.MonitoringOptions.map((opt, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf // checked={\n        //   this.state.MonitoringOptionSelection.toString().indexOf(\n        //     opt.inf\n        //   ) > -1\n        // }\n        ,\n        checked: opt.checked,\n        onChange: e => {\n          this.setState({\n            MonitoringOptionSelection: [e.target.value]\n          });\n        },\n        type: \"radio\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), \"\\xA0\", opt.inf, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\");\n    }))), this.state.workFlowSelectedOptions.toString() === \"Git Provisioning    \" && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"30px\",\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \" \"), \" \\xA0\"), React.createElement(\"div\", {\n      className: \"form-check-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, this.state.GitOptions.map((opt, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf,\n        checked: this.state.GitSelection.toString().indexOf(opt.inf) > -1,\n        onChange: e => {\n          this.setState({\n            GitSelection: [e.target.value]\n          });\n        },\n        type: \"radio\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), \"\\xA0\", opt.inf, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\");\n    }))), this.state.workFlowSelectedOptions.toString() === \"Integration with JIRA    \" && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"30px\",\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \" \"), \" \\xA0\"), React.createElement(\"div\", {\n      className: \"form-check-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, this.state.JiraOptions.map((opt, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf,\n        checked: this.state.JiraOptionSelection.toString().indexOf(opt.inf) > -1,\n        onChange: e => {\n          this.setState({\n            JiraOptionSelection: [e.target.value]\n          });\n        },\n        type: \"radio\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), \"\\xA0\", opt.inf, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\");\n    }))), this.state.JiraOptionSelection.toString() === \"Create a new JIRA project    \" && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        width: \"770px\",\n        marginRight: \"7px\",\n        marginLeft: \"30px\",\n        marginBottom: \"11px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-form-label required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Jira Username\")), React.createElement(\"input\", {\n      className: \"form-control mb-2 mr-sm-2\",\n      type: \"text\",\n      onChange: e => this.setState({\n        JiraUserName: e.target.value\n      }),\n      placeholder: \"Enter Project Name\",\n      required: true,\n      value: this.state.JiraUserName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }))), React.createElement(\"i\", {\n      className: \"fa fa-info-circle fa-lg\",\n      style: {\n        color: \"black\"\n      },\n      title: \"Description about Jira Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        width: \"770px\",\n        marginRight: \"8px\",\n        marginLeft: \"30px\",\n        marginBottom: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-form-label required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, \" Jira Password\")), React.createElement(\"input\", {\n      className: \"form-control mb-2 mr-sm-2\",\n      type: this.state.hidden3 ? \"password\" : \"text\",\n      onChange: e => {\n        this.setState({\n          JiraPassword: e.target.value\n        });\n      },\n      placeholder: \"Enter Jira Password \",\n      value: this.state.JiraPassword,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }))), this.state.hidden3 && React.createElement(\"span\", {\n      onClick: () => {\n        this.setState({\n          hidden3: !this.state.hidden3\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-eye errspan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    })), !this.state.hidden3 && React.createElement(\"span\", {\n      onClick: () => {\n        this.setState({\n          hidden3: !this.state.hidden3\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-eye-close errspan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"d-flex justify-content-between ml-4 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClearForm3.bind(this),\n      className: \"btn btn-outline-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \"Reset\"))))));\n  }\n\n}\n\nexport default FormComponent3;","map":{"version":3,"sources":["/home/nikhil/Desktop/drivelatest/src/components/Stepper/FormComponent3.jsx"],"names":["React","Component","FormComponent3","constructor","props","state","workFlowOptions","isDisabled","id","inf","ischecked","workFlowSelectedOptions","MonitoringOptions","MonitoringOptionSelection","JiraOptions","JiraOptionSelection","JiraUserName","JiraPassword","hidden3","GitOptions","GitSelection","componentWillUnmount","saveData","componentDidMount","setState","handleClearForm3","e","preventDefault","render","marginTop","marginLeft","marginRight","map","opt","wfsOptions","forEach","op","target","value","checked","toString","i","indexOf","display","width","marginBottom","color","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass FormComponent3 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workFlowOptions: [\n        { isDisabled: \"\", id: 1, inf: \"Logging    \", ischecked: true },\n        {\n          isDisabled: \"disabled\",\n          id: 2,\n          inf: \"Monitoring    \",\n          ischecked: false\n        },\n        {\n          isDisabled: \"\",\n          id: 3,\n          inf: \"Integration with JIRA    \",\n          ischecked: false\n        },\n        {\n          isDisabled: \"disabled\",\n          id: 4,\n          inf: \"Git Provisioning    \",\n          ischecked: false\n        }\n      ],\n      workFlowSelectedOptions: [],\n      MonitoringOptions: [\n        { isDisabled: \"disabled\", id: 1, inf: \"Cloud Watch\" },\n        { isDisabled: \"disabled\", id: 2, inf: \"Stack Driver\" }\n      ],\n      MonitoringOptionSelection: \"\",\n      JiraOptions: [\n        {\n          isDisabled: \"disabled\",\n          id: 1,\n          inf: \"Add to an existing JIRA project\"\n        },\n        { isDisabled: \"\", id: 2, inf: \"Create a new JIRA project    \" }\n      ],\n      JiraOptionSelection: \"\",\n      JiraUserName: \"\",\n      JiraPassword: \"\",\n      hidden3: \"true\",\n      GitOptions: [\n        {\n          isDisabled: \"disabled\",\n          id: 1,\n          inf: \"Add an existing gitlab account\"\n        },\n        { isDisabled: \"disabled\", id: 2, inf: \"Create a new Gitlab Account\" }\n      ],\n      GitSelection: \"\"\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.saveData(3, this.state);\n  }\n  componentDidMount() {\n    this.setState({\n      workFlowSelectedOptions: this.props.workFlowSelectedOptions\n    });\n    this.setState({ JiraOptionSelection: this.props.JiraOptionSelection });\n    this.setState({ JiraUserName: this.props.JiraUserName });\n    this.setState({ JiraPassword: this.props.JiraPassword });\n    this.setState({ hidden3: this.props.hidden3 });\n    this.setState({ GitSelection: this.props.GitSelection });\n    this.setState({\n      MonitoringOptionSelection: this.props.MonitoringOptionSelection\n    });\n  }\n  handleClearForm3(e) {\n    e.preventDefault();\n    this.setState({\n      workFlowSelectedOptions: [],\n      JiraOptionSelection: \"\",\n      JiraUserName: \"\",\n      JiraPassword: \"\",\n      GitSelection: \"\"\n    });\n  }\n  render() {\n    return (\n      <>\n        <form\n          className=\"w-75 bg-light text-dark offset-lg-1\"\n          validate=\"true\"\n          noValidate\n          style={{\n            marginTop: \"50px\"\n          }}\n        >\n          <>\n            <h2>\n              <center>\n                <b> Workflow Monitoring </b>{\" \"}\n              </center>{\" \"}\n            </h2>{\" \"}\n            <div className=\"form-group\">\n              <label\n                className=\"form-check-label\"\n                style={{\n                  marginLeft: \"10px\",\n                  marginRight: \"18px\"\n                }}\n              >\n                {\" \"}\n                <b> Workflow Options </b> &nbsp;{\" \"}\n              </label>{\" \"}\n              <br />\n              <br />\n              <div className=\"form-check\">\n                {\" \"}\n                {this.state.workFlowOptions.map(opt => {\n                  return (\n                    <>\n                      <br />\n                      <div key={opt.id}>\n                        <label key={opt.id} className=\"form-check-label\">\n                          <input\n                            key={opt.id}\n                            value={opt.inf}\n                            checked={opt.ischecked}\n                            onClick={e => {\n                              let wfsOptions = this.state\n                                .workFlowSelectedOptions;\n                              wfsOptions.forEach(op => {\n                                if (op.opt.inf === e.target.value)\n                                  op.opt.ischecked = e.target.checked;\n                              });\n\n                              this.setState({\n                                workFlowSelectedOptions: wfsOptions\n                              });\n                            }}\n                            // checked={\n                            //   this.state.workFlowSelectedOptions\n                            //     .toString()\n                            //     .indexOf(opt.inf) > -1\n                            // }\n\n                            // onChange={e => {\n                            //   let newSelection = e.target.value;\n                            //   let newSelectionArray;\n                            //   if (e.target.checked) {\n                            //     newSelectionArray = [\n                            //       this.state.workFlowSelectedOptions.filter(\n                            //         s => s !== newSelection\n                            //       )\n                            //     ];\n                            //   }\n                            // this.setState({})\n                            // this.state.workFlowSelectedOptions.push(\n                            //   opt.inf\n                            // );\n\n                            // else {\n                            //   newSelectionArray = [\n                            //     ...this.state.workFlowSelectedOptions,\n                            //     newSelection\n                            //   ];\n                            // }\n\n                            //   const idx = this.state.workFlowSelectedOptions.indexOf(\n                            //     opt.inf\n                            //   );\n                            //   this.state.workFlowSelectedOptions.remove(idx);\n                            // }\n                            // }}\n                            // onChange={e => {\n                            //   let newSelection = e.target.value;\n                            //   let newSelectionArray;\n                            //   if (\n                            //     this.state.workFlowSelectedOptions.indexOf(\n                            //       e.target.value\n                            //     ) > -1\n                            //   ) {\n                            //     newSelectionArray = [\n                            //       this.state.workFlowSelectedOptions.filter(\n                            //         s => s !== newSelection\n                            //       )\n                            //     ];\n                            //   } else {\n                            //     newSelectionArray = [\n                            //       ...this.state.workFlowSelectedOptions,\n                            //       newSelection\n                            //     ];\n                            //   }\n                            //   this.setState({\n                            //     workFlowSelectedOptions: newSelectionArray\n                            //   });\n                            // }}\n                            type=\"checkbox\"\n                            disabled={opt.isDisabled}\n                          />{\" \"}\n                          &nbsp; {opt.inf}\n                          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                          &nbsp; <br />\n                          <br />\n                        </label>{\" \"}\n                      </div>\n                    </>\n                  );\n                })}{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n            {this.state.workFlowSelectedOptions.toString() ===\n              \"Monitoring    \" && (\n              <div className=\"form-group\">\n                <label\n                  className=\"form-check-label\"\n                  style={{ marginLeft: \"30px\", marginRight: \"20px\" }}\n                >\n                  <b> </b> &nbsp;\n                </label>\n                <div className=\"form-check-inline \">\n                  {this.state.MonitoringOptions.map((opt, i) => {\n                    return (\n                      <label key={i} className=\"form-check-label\">\n                        <input\n                          value={opt.inf}\n                          // checked={\n                          //   this.state.MonitoringOptionSelection.toString().indexOf(\n                          //     opt.inf\n                          //   ) > -1\n                          // }\n                          checked={opt.checked}\n                          onChange={e => {\n                            this.setState({\n                              MonitoringOptionSelection: [e.target.value]\n                            });\n                          }}\n                          type=\"radio\"\n                          key={opt.id}\n                          disabled={opt.isDisabled}\n                        />\n                        &nbsp;\n                        {opt.inf}\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp; &nbsp;\n                      </label>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {this.state.workFlowSelectedOptions.toString() ===\n              \"Git Provisioning    \" && (\n              <div className=\"form-group\">\n                <label\n                  className=\"form-check-label\"\n                  style={{ marginLeft: \"30px\", marginRight: \"20px\" }}\n                >\n                  <b> </b> &nbsp;\n                </label>\n                <div className=\"form-check-inline \">\n                  {this.state.GitOptions.map((opt, i) => {\n                    return (\n                      <label key={i} className=\"form-check-label\">\n                        <input\n                          value={opt.inf}\n                          checked={\n                            this.state.GitSelection.toString().indexOf(\n                              opt.inf\n                            ) > -1\n                          }\n                          onChange={e => {\n                            this.setState({\n                              GitSelection: [e.target.value]\n                            });\n                          }}\n                          type=\"radio\"\n                          key={opt.id}\n                          disabled={opt.isDisabled}\n                        />\n                        &nbsp;\n                        {opt.inf}\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp; &nbsp;\n                      </label>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {this.state.workFlowSelectedOptions.toString() ===\n              \"Integration with JIRA    \" && (\n              <div className=\"form-group\">\n                <label\n                  className=\"form-check-label\"\n                  style={{ marginLeft: \"30px\", marginRight: \"20px\" }}\n                >\n                  <b> </b> &nbsp;\n                </label>\n                <div className=\"form-check-inline \">\n                  {this.state.JiraOptions.map((opt, i) => {\n                    return (\n                      <label key={i} className=\"form-check-label\">\n                        <input\n                          value={opt.inf}\n                          checked={\n                            this.state.JiraOptionSelection.toString().indexOf(\n                              opt.inf\n                            ) > -1\n                          }\n                          onChange={e => {\n                            this.setState({\n                              JiraOptionSelection: [e.target.value]\n                            });\n                          }}\n                          type=\"radio\"\n                          key={opt.id}\n                          disabled={opt.isDisabled}\n                        />\n                        &nbsp;\n                        {opt.inf}\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                        &nbsp;&nbsp; &nbsp;\n                      </label>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {this.state.JiraOptionSelection.toString() ===\n              \"Create a new JIRA project    \" && (\n              <>\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    width: \"770px\",\n                    marginRight: \"7px\",\n                    marginLeft: \"30px\",\n                    marginBottom: \"11px\"\n                  }}\n                >\n                  <div className=\"form-group \">\n                    <label className=\"col-form-label required\">\n                      <b>Jira Username</b>\n                    </label>\n\n                    <input\n                      className=\"form-control mb-2 mr-sm-2\"\n                      type=\"text\"\n                      onChange={e =>\n                        this.setState({ JiraUserName: e.target.value })\n                      }\n                      placeholder=\"Enter Project Name\"\n                      required\n                      value={this.state.JiraUserName}\n                    />\n                  </div>\n                </div>\n\n                <i\n                  className=\"fa fa-info-circle fa-lg\"\n                  style={{ color: \"black\" }}\n                  title=\"Description about Jira Username\"\n                ></i>\n\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    width: \"770px\",\n                    marginRight: \"8px\",\n                    marginLeft: \"30px\",\n                    marginBottom: \"10px\"\n                  }}\n                >\n                  <div className=\"form-group \">\n                    <label className=\"col-form-label required\">\n                      <b> Jira Password</b>\n                    </label>\n                    <input\n                      className=\"form-control mb-2 mr-sm-2\"\n                      type={this.state.hidden3 ? \"password\" : \"text\"}\n                      onChange={e => {\n                        this.setState({\n                          JiraPassword: e.target.value\n                        });\n                      }}\n                      placeholder=\"Enter Jira Password \"\n                      value={this.state.JiraPassword}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {this.state.hidden3 && (\n                  <span\n                    onClick={() => {\n                      this.setState({\n                        hidden3: !this.state.hidden3\n                      });\n                    }}\n                  >\n                    <i className=\"fa fa-eye errspan\"></i>\n                  </span>\n                )}\n\n                {!this.state.hidden3 && (\n                  <span\n                    onClick={() => {\n                      this.setState({\n                        hidden3: !this.state.hidden3\n                      });\n                    }}\n                  >\n                    <i className=\"icon-eye-close errspan\"></i>\n                  </span>\n                )}\n\n                <div className=\"d-flex justify-content-between ml-4 mb-3\">\n                  <button\n                    type=\"button\"\n                    onClick={this.handleClearForm3.bind(this)}\n                    className=\"btn btn-outline-warning\"\n                  >\n                    Reset\n                  </button>\n                </div>\n              </>\n            )}\n          </>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default FormComponent3;\n"]},"metadata":{},"sourceType":"module"}