apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: od-training-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.0.0, pipelines.kubeflow.org/pipeline_compilation_time: '2020-09-04T13:47:21.805681',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "disney interactive", "inputs":
      [{"default": "disney-218910", "name": "project_id", "optional": true}, {"default":
      "gs://kubeflow_pipelines_test", "name": "gcs_working_dir", "optional": true},
      {"default": "FoP", "name": "attraction_name", "optional": true}, {"default":
      "run_6", "name": "run_name", "optional": true}, {"default": "train.main", "name":
      "python_module", "optional": true}, {"default": "us-central1", "name": "region",
      "optional": true}, {"default": "1.15", "name": "runtime_version", "optional":
      true}, {"default": "{\"scaleTier\": \"CUSTOM\", \"masterType\": \"n1-highcpu-16\",
      \"workerType\": \"cloud_tpu\", \"workerConfig\": {\"acceleratorConfig\": {\"type\":
      \"TPU_V2\", \"count\": \"8\"}}, \"workerCount\": \"1\"}", "name": "training_input",
      "optional": true}, {"default": "[\"gs://kubeflow_pipelines_test/Base/OD/training_code/eval_trainer-0.1.zip\"]",
      "name": "eval_package_uris", "optional": true}, {"default": "{\"scaleTier\":
      \"CUSTOM\", \"masterType\": \"complex_model_m_gpu\", \"runtimeVersion\": \"1.5\"}",
      "name": "eval_training_input", "optional": true}, {"default": "1800", "name":
      "eval_timeout", "optional": true}, {"default": "3.7", "name": "python_version",
      "optional": true}, {"default": "gs://kubeflow_pipelines_test/Datasets/OD/COCO",
      "name": "data_path", "optional": true}], "name": "OD Training"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.0.0}
spec:
  entrypoint: od-training
  templates:
  - name: images-to-tfrecords
    container:
      args: [--image_dir, '{{inputs.parameters.data_path}}/Images/train', --object_annotations_file,
        '{{inputs.parameters.data_path}}/Annotations/train.json', --output_file_prefix,
        '{{inputs.parameters.gcs_working_dir}}/{{inputs.parameters.attraction_name}}/OD/{{inputs.parameters.run_name}}/train_data/',
        --num_shards, '1']
      image: gcr.io/disney-218910/od-preprocess:1.0
    inputs:
      parameters:
      - {name: attraction_name}
      - {name: data_path}
      - {name: gcs_working_dir}
      - {name: run_name}
  - name: images-to-tfrecords-2
    container:
      args: [--image_dir, '{{inputs.parameters.data_path}}/Images/val', --object_annotations_file,
        '{{inputs.parameters.data_path}}/Annotations/val.json', --output_file_prefix,
        '{{inputs.parameters.gcs_working_dir}}/{{inputs.parameters.attraction_name}}/OD/{{inputs.parameters.run_name}}/val_data/',
        --num_shards, '1']
      image: gcr.io/disney-218910/od-preprocess:1.0
    inputs:
      parameters:
      - {name: attraction_name}
      - {name: data_path}
      - {name: gcs_working_dir}
      - {name: run_name}
  - name: od-training
    inputs:
      parameters:
      - {name: attraction_name}
      - {name: data_path}
      - {name: eval_package_uris}
      - {name: eval_timeout}
      - {name: eval_training_input}
      - {name: gcs_working_dir}
      - {name: project_id}
      - {name: run_name}
    dag:
      tasks:
      - name: images-to-tfrecords
        template: images-to-tfrecords
        arguments:
          parameters:
          - {name: attraction_name, value: '{{inputs.parameters.attraction_name}}'}
          - {name: data_path, value: '{{inputs.parameters.data_path}}'}
          - {name: gcs_working_dir, value: '{{inputs.parameters.gcs_working_dir}}'}
          - {name: run_name, value: '{{inputs.parameters.run_name}}'}
      - name: images-to-tfrecords-2
        template: images-to-tfrecords-2
        arguments:
          parameters:
          - {name: attraction_name, value: '{{inputs.parameters.attraction_name}}'}
          - {name: data_path, value: '{{inputs.parameters.data_path}}'}
          - {name: gcs_working_dir, value: '{{inputs.parameters.gcs_working_dir}}'}
          - {name: run_name, value: '{{inputs.parameters.run_name}}'}
      - name: submitting-a-cloud-ml-training-job-as-a-pipeline-step
        template: submitting-a-cloud-ml-training-job-as-a-pipeline-step
        dependencies: [images-to-tfrecords]
        arguments:
          parameters:
          - {name: attraction_name, value: '{{inputs.parameters.attraction_name}}'}
          - {name: gcs_working_dir, value: '{{inputs.parameters.gcs_working_dir}}'}
          - {name: project_id, value: '{{inputs.parameters.project_id}}'}
          - {name: run_name, value: '{{inputs.parameters.run_name}}'}
      - name: submitting-a-cloud-ml-training-job-as-a-pipeline-step-2
        template: submitting-a-cloud-ml-training-job-as-a-pipeline-step-2
        dependencies: [images-to-tfrecords]
        arguments:
          parameters:
          - {name: attraction_name, value: '{{inputs.parameters.attraction_name}}'}
          - {name: eval_package_uris, value: '{{inputs.parameters.eval_package_uris}}'}
          - {name: eval_timeout, value: '{{inputs.parameters.eval_timeout}}'}
          - {name: eval_training_input, value: '{{inputs.parameters.eval_training_input}}'}
          - {name: gcs_working_dir, value: '{{inputs.parameters.gcs_working_dir}}'}
          - {name: project_id, value: '{{inputs.parameters.project_id}}'}
          - {name: run_name, value: '{{inputs.parameters.run_name}}'}
  - name: submitting-a-cloud-ml-training-job-as-a-pipeline-step
    container:
      args: [--ui_metadata_path, /tmp/outputs/MLPipeline_UI_metadata/data, kfp_component.google.ml_engine,
        train, --project_id, '{{inputs.parameters.project_id}}', --python_module,
        train.main, --package_uris, '["gs://kubeflow_pipelines_test/Base/OD/training_code/trainer-0.1.zip"]',
        --region, us-central1, --args, '["--main_dir", "{{inputs.parameters.gcs_working_dir}}",
          "--mode", "train", "--train_batch_size", "64", "--training_file_pattern",
          "{{inputs.parameters.gcs_working_dir}}/{{inputs.parameters.attraction_name}}/OD/{{inputs.parameters.run_name}}/train_data/*",
          "--validation_file_pattern", "{{inputs.parameters.gcs_working_dir}}/{{inputs.parameters.attraction_name}}/OD/{{inputs.parameters.run_name}}/val_data/*",
          "--model_name", "efficientdet-d2", "--eval_batch_size", "1", "--eval_samples",
          "2693", "--num_examples_per_epoch", "5000", "--num_epochs", "5", "--model_dir",
          "{{inputs.parameters.gcs_working_dir}}/{{inputs.parameters.attraction_name}}/OD/{{inputs.parameters.run_name}}/",
          "--strategy", "tpu", "--ckpt", "gs://kubeflow_pipelines_test/Base/OD/pretrained_checkpoints",
          "--hparams", "coco_config_people.yaml"]', --job_dir, '{{inputs.parameters.gcs_working_dir}}/{{inputs.parameters.attraction_name}}/OD/{{inputs.parameters.run_name}}/',
        --python_version, '3.7', --runtime_version, '1.15', --master_image_uri, '',
        --worker_image_uri, '', --training_input, '{"scaleTier": "CUSTOM", "masterType":
          "n1-highcpu-16", "workerType": "cloud_tpu", "workerConfig": {"acceleratorConfig":
          {"type": "TPU_V2", "count": "8"}}, "workerCount": "1"}', --job_id_prefix,
        '', --job_id, 'train_OD_{{inputs.parameters.attraction_name}}_{{inputs.parameters.run_name}}',
        --wait_interval, '30']
      command: []
      env:
      - {name: KFP_POD_NAME, value: '{{pod.name}}'}
      - name: KFP_POD_NAME
        valueFrom:
          fieldRef: {fieldPath: metadata.name}
      - name: KFP_NAMESPACE
        valueFrom:
          fieldRef: {fieldPath: metadata.namespace}
      image: gcr.io/ml-pipeline/ml-pipeline-gcp:1.0.0
    inputs:
      parameters:
      - {name: attraction_name}
      - {name: gcs_working_dir}
      - {name: project_id}
      - {name: run_name}
    outputs:
      artifacts:
      - {name: mlpipeline-ui-metadata, path: /tmp/outputs/MLPipeline_UI_metadata/data}
      - {name: submitting-a-cloud-ml-training-job-as-a-pipeline-step-job_dir, path: /tmp/kfp/output/ml_engine/job_dir.txt}
      - {name: submitting-a-cloud-ml-training-job-as-a-pipeline-step-job_id, path: /tmp/kfp/output/ml_engine/job_id.txt}
    metadata:
      labels:
        add-pod-env: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "A Kubeflow
          Pipeline component to submit a Cloud Machine Learning (Cloud ML) \nEngine
          training job as a step in a pipeline.\n", "implementation": {"container":
          {"args": ["--ui_metadata_path", {"outputPath": "MLPipeline UI metadata"},
          "kfp_component.google.ml_engine", "train", "--project_id", {"inputValue":
          "project_id"}, "--python_module", {"inputValue": "python_module"}, "--package_uris",
          {"inputValue": "package_uris"}, "--region", {"inputValue": "region"}, "--args",
          {"inputValue": "args"}, "--job_dir", {"inputValue": "job_dir"}, "--python_version",
          {"inputValue": "python_version"}, "--runtime_version", {"inputValue": "runtime_version"},
          "--master_image_uri", {"inputValue": "master_image_uri"}, "--worker_image_uri",
          {"inputValue": "worker_image_uri"}, "--training_input", {"inputValue": "training_input"},
          "--job_id_prefix", {"inputValue": "job_id_prefix"}, "--job_id", {"inputValue":
          "job_id"}, "--wait_interval", {"inputValue": "wait_interval"}], "env": {"KFP_POD_NAME":
          "{{pod.name}}"}, "fileOutputs": {"job_dir": "/tmp/kfp/output/ml_engine/job_dir.txt",
          "job_id": "/tmp/kfp/output/ml_engine/job_id.txt"}, "image": "gcr.io/ml-pipeline/ml-pipeline-gcp:1.0.0"}},
          "inputs": [{"description": "Required. The ID of the parent project of the
          job.", "name": "project_id", "type": "GCPProjectID"}, {"default": "", "description":
          "The Python module name to run after installing the packages.", "name":
          "python_module", "type": "String"}, {"default": "", "description": "The
          Cloud Storage location of the packages (that contain the training program  and
          any additional dependencies). The maximum number of package URIs is 100.",
          "name": "package_uris", "type": "List"}, {"default": "", "description":
          "The Compute Engine region in which the training job is run.", "name": "region",
          "type": "GCPRegion"}, {"default": "", "description": "The command line arguments
          to pass to the program.", "name": "args", "type": "List"}, {"default": "",
          "description": "A Cloud Storage path in which to store the training outputs
          and other data  needed for training. This path is passed to your TensorFlow
          program as the  `job-dir` command-line argument. The benefit of specifying
          this field is  that Cloud ML validates the path for use in training.", "name":
          "job_dir", "type": "GCSPath"}, {"default": "", "description": "The version
          of Python used in training. If not set, the default version is `2.7`. Python
          `3.5` is available when runtimeVersion is set to `1.4` and above.", "name":
          "python_version", "type": "String"}, {"default": "", "description": "The
          Cloud ML Engine runtime version to use for training. If not set, Cloud ML
          Engine uses the default stable version, 1.0.", "name": "runtime_version",
          "type": "String"}, {"default": "", "description": "The Docker image to run
          on the master replica. This image must be in Container Registry.", "name":
          "master_image_uri", "type": "GCRPath"}, {"default": "", "description": "The
          Docker image to run on the worker replica. This image must be in Container
          Registry.", "name": "worker_image_uri", "type": "GCRPath"}, {"default":
          "", "description": "The input parameters to create a training job. It is
          the JSON payload  of a [TrainingInput](https://cloud.google.com/ml-engine/reference/rest/v1/projects.jobs#TrainingInput)",
          "name": "training_input", "type": "Dict"}, {"default": "", "description":
          "The prefix of the generated job id.", "name": "job_id_prefix", "type":
          "String"}, {"default": "", "description": "The ID of the job to create,
          takes precedence over generated job id if set.", "name": "job_id", "type":
          "String"}, {"default": "30", "description": "Optional. A time-interval to
          wait for between calls to get the job status.  Defaults to 30.''", "name":
          "wait_interval", "type": "Integer"}], "metadata": {"labels": {"add-pod-env":
          "true"}}, "name": "Submitting a Cloud ML training job as a pipeline step",
          "outputs": [{"description": "The ID of the created job.", "name": "job_id",
          "type": "String"}, {"description": "The output path in Cloud Storage of
          the trainning job, which contains  the trained model files.", "name": "job_dir",
          "type": "GCSPath"}, {"name": "MLPipeline UI metadata", "type": "UI metadata"}]}',
        pipelines.kubeflow.org/component_ref: '{"digest": "fe9ac18632dfc0f34c0d21b1bf6bbb9a27f5628d0625447e9ce5b26998892491",
          "url": "https://raw.githubusercontent.com/kubeflow/pipelines/1.0.0/components/gcp/ml_engine/train/component.yaml"}'}
  - name: submitting-a-cloud-ml-training-job-as-a-pipeline-step-2
    container:
      args: [--ui_metadata_path, /tmp/outputs/MLPipeline_UI_metadata/data, kfp_component.google.ml_engine,
        train, --project_id, '{{inputs.parameters.project_id}}', --python_module,
        train.main, --package_uris, '{{inputs.parameters.eval_package_uris}}', --region,
        us-central1, --args, '["--main_dir", "{{inputs.parameters.gcs_working_dir}}",
          "--mode", "eval", "--train_batch_size", "64", "--validation_file_pattern",
          "{{inputs.parameters.gcs_working_dir}}/{{inputs.parameters.attraction_name}}/OD/{{inputs.parameters.run_name}}/val_data/*",
          "--model_name", "efficientdet-d2", "--eval_batch_size", "1", "--eval_samples",
          "2693", "--model_dir", "{{inputs.parameters.gcs_working_dir}}/{{inputs.parameters.attraction_name}}/OD/{{inputs.parameters.run_name}}/",
          "--hparams", "coco_config_people.yaml", "--eval_timeout", "{{inputs.parameters.eval_timeout}}"]',
        --job_dir, '{{inputs.parameters.gcs_working_dir}}/{{inputs.parameters.attraction_name}}/OD/{{inputs.parameters.run_name}}/',
        --python_version, '3.7', --runtime_version, '1.15', --master_image_uri, '',
        --worker_image_uri, '', --training_input, '{{inputs.parameters.eval_training_input}}',
        --job_id_prefix, '', --job_id, 'eval_OD_{{inputs.parameters.attraction_name}}_{{inputs.parameters.run_name}}',
        --wait_interval, '30']
      command: []
      env:
      - {name: KFP_POD_NAME, value: '{{pod.name}}'}
      - name: KFP_POD_NAME
        valueFrom:
          fieldRef: {fieldPath: metadata.name}
      - name: KFP_NAMESPACE
        valueFrom:
          fieldRef: {fieldPath: metadata.namespace}
      image: gcr.io/ml-pipeline/ml-pipeline-gcp:1.0.0
    inputs:
      parameters:
      - {name: attraction_name}
      - {name: eval_package_uris}
      - {name: eval_timeout}
      - {name: eval_training_input}
      - {name: gcs_working_dir}
      - {name: project_id}
      - {name: run_name}
    outputs:
      artifacts:
      - {name: mlpipeline-ui-metadata, path: /tmp/outputs/MLPipeline_UI_metadata/data}
      - {name: submitting-a-cloud-ml-training-job-as-a-pipeline-step-2-job_dir, path: /tmp/kfp/output/ml_engine/job_dir.txt}
      - {name: submitting-a-cloud-ml-training-job-as-a-pipeline-step-2-job_id, path: /tmp/kfp/output/ml_engine/job_id.txt}
    metadata:
      labels:
        add-pod-env: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "A Kubeflow
          Pipeline component to submit a Cloud Machine Learning (Cloud ML) \nEngine
          training job as a step in a pipeline.\n", "implementation": {"container":
          {"args": ["--ui_metadata_path", {"outputPath": "MLPipeline UI metadata"},
          "kfp_component.google.ml_engine", "train", "--project_id", {"inputValue":
          "project_id"}, "--python_module", {"inputValue": "python_module"}, "--package_uris",
          {"inputValue": "package_uris"}, "--region", {"inputValue": "region"}, "--args",
          {"inputValue": "args"}, "--job_dir", {"inputValue": "job_dir"}, "--python_version",
          {"inputValue": "python_version"}, "--runtime_version", {"inputValue": "runtime_version"},
          "--master_image_uri", {"inputValue": "master_image_uri"}, "--worker_image_uri",
          {"inputValue": "worker_image_uri"}, "--training_input", {"inputValue": "training_input"},
          "--job_id_prefix", {"inputValue": "job_id_prefix"}, "--job_id", {"inputValue":
          "job_id"}, "--wait_interval", {"inputValue": "wait_interval"}], "env": {"KFP_POD_NAME":
          "{{pod.name}}"}, "fileOutputs": {"job_dir": "/tmp/kfp/output/ml_engine/job_dir.txt",
          "job_id": "/tmp/kfp/output/ml_engine/job_id.txt"}, "image": "gcr.io/ml-pipeline/ml-pipeline-gcp:1.0.0"}},
          "inputs": [{"description": "Required. The ID of the parent project of the
          job.", "name": "project_id", "type": "GCPProjectID"}, {"default": "", "description":
          "The Python module name to run after installing the packages.", "name":
          "python_module", "type": "String"}, {"default": "", "description": "The
          Cloud Storage location of the packages (that contain the training program  and
          any additional dependencies). The maximum number of package URIs is 100.",
          "name": "package_uris", "type": "List"}, {"default": "", "description":
          "The Compute Engine region in which the training job is run.", "name": "region",
          "type": "GCPRegion"}, {"default": "", "description": "The command line arguments
          to pass to the program.", "name": "args", "type": "List"}, {"default": "",
          "description": "A Cloud Storage path in which to store the training outputs
          and other data  needed for training. This path is passed to your TensorFlow
          program as the  `job-dir` command-line argument. The benefit of specifying
          this field is  that Cloud ML validates the path for use in training.", "name":
          "job_dir", "type": "GCSPath"}, {"default": "", "description": "The version
          of Python used in training. If not set, the default version is `2.7`. Python
          `3.5` is available when runtimeVersion is set to `1.4` and above.", "name":
          "python_version", "type": "String"}, {"default": "", "description": "The
          Cloud ML Engine runtime version to use for training. If not set, Cloud ML
          Engine uses the default stable version, 1.0.", "name": "runtime_version",
          "type": "String"}, {"default": "", "description": "The Docker image to run
          on the master replica. This image must be in Container Registry.", "name":
          "master_image_uri", "type": "GCRPath"}, {"default": "", "description": "The
          Docker image to run on the worker replica. This image must be in Container
          Registry.", "name": "worker_image_uri", "type": "GCRPath"}, {"default":
          "", "description": "The input parameters to create a training job. It is
          the JSON payload  of a [TrainingInput](https://cloud.google.com/ml-engine/reference/rest/v1/projects.jobs#TrainingInput)",
          "name": "training_input", "type": "Dict"}, {"default": "", "description":
          "The prefix of the generated job id.", "name": "job_id_prefix", "type":
          "String"}, {"default": "", "description": "The ID of the job to create,
          takes precedence over generated job id if set.", "name": "job_id", "type":
          "String"}, {"default": "30", "description": "Optional. A time-interval to
          wait for between calls to get the job status.  Defaults to 30.''", "name":
          "wait_interval", "type": "Integer"}], "metadata": {"labels": {"add-pod-env":
          "true"}}, "name": "Submitting a Cloud ML training job as a pipeline step",
          "outputs": [{"description": "The ID of the created job.", "name": "job_id",
          "type": "String"}, {"description": "The output path in Cloud Storage of
          the trainning job, which contains  the trained model files.", "name": "job_dir",
          "type": "GCSPath"}, {"name": "MLPipeline UI metadata", "type": "UI metadata"}]}',
        pipelines.kubeflow.org/component_ref: '{"digest": "fe9ac18632dfc0f34c0d21b1bf6bbb9a27f5628d0625447e9ce5b26998892491",
          "url": "https://raw.githubusercontent.com/kubeflow/pipelines/1.0.0/components/gcp/ml_engine/train/component.yaml"}'}
  arguments:
    parameters:
    - {name: project_id, value: disney-218910}
    - {name: gcs_working_dir, value: 'gs://kubeflow_pipelines_test'}
    - {name: attraction_name, value: FoP}
    - {name: run_name, value: run_6}
    - {name: python_module, value: train.main}
    - {name: region, value: us-central1}
    - {name: runtime_version, value: '1.15'}
    - {name: training_input, value: '{"scaleTier": "CUSTOM", "masterType": "n1-highcpu-16",
        "workerType": "cloud_tpu", "workerConfig": {"acceleratorConfig": {"type":
        "TPU_V2", "count": "8"}}, "workerCount": "1"}'}
    - {name: eval_package_uris, value: '["gs://kubeflow_pipelines_test/Base/OD/training_code/eval_trainer-0.1.zip"]'}
    - {name: eval_training_input, value: '{"scaleTier": "CUSTOM", "masterType": "complex_model_m_gpu",
        "runtimeVersion": "1.5"}'}
    - {name: eval_timeout, value: '1800'}
    - {name: python_version, value: '3.7'}
    - {name: data_path, value: 'gs://kubeflow_pipelines_test/Datasets/OD/COCO'}
  serviceAccountName: pipeline-runner
