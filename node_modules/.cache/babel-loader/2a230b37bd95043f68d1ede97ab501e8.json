{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/drivelatest/src/components/Stepper/FormComponent3.jsx\";\nimport React, { Component } from \"react\";\n\nclass FormComponent3 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workFlowOptions: [{\n        isDisabled: \"\",\n        id: 1,\n        inf: \"Logging    \",\n        checked: \"checked\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 2,\n        inf: \"Monitoring    \",\n        checked: \"\"\n      }, {\n        isDisabled: \"\",\n        id: 3,\n        inf: \"Integration with JIRA    \",\n        checked: \"\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 4,\n        inf: \"Git Provisioning    \",\n        checked: \"\"\n      }],\n      workFlowSelectedOptions: [],\n      MonitoringOptions: [{\n        isDisabled: \"disabled\",\n        id: 1,\n        inf: \"Cloud Watch\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 2,\n        inf: \"Stack Driver\"\n      }],\n      MonitoringOptionSelection: \"\",\n      JiraOptions: [{\n        isDisabled: \"disabled\",\n        id: 1,\n        inf: \"Add to an existing JIRA project\"\n      }, {\n        isDisabled: \"\",\n        id: 2,\n        inf: \"Create a new JIRA project\"\n      }],\n      JiraOptionSelection: \"\",\n      JiraUserName: \"\",\n      JiraPassword: \"\",\n      GitOptions: [{\n        isDisabled: \"disabled\",\n        id: 1,\n        inf: \"Add an existing gitlab account\"\n      }, {\n        isDisabled: \"disabled\",\n        id: 2,\n        inf: \"Create a new Gitlab Account\"\n      }],\n      GitSelection: \"\"\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.saveData(3, this.state);\n  }\n\n  componentDidMount() {\n    this.setState({\n      workFlowSelectedOptions: this.props.workFlowSelectedOptions\n    });\n    this.setState({\n      JiraOptionSelection: this.props.JiraOptionSelection\n    });\n    this.setState({\n      JiraUserName: this.props.JiraUserName\n    });\n    this.setState({\n      JiraPassword: this.props.JiraPassword\n    });\n    this.setState({\n      GitSelection: this.props.GitSelection\n    });\n    this.setState({\n      MonitoringOptionSelection: this.props.MonitoringOptionSelection\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      className: \"w-75 bg-light text-dark offset-lg-1\",\n      validate: \"true\",\n      noValidate: true,\n      style: {\n        marginTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" Workflow Monitoring \"), \" \"), \" \"), \" \", React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"18px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" Workflow Options \"), \" \\xA0\", \" \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \", this.state.workFlowOptions.map(opt => {\n      return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        key: opt.id,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf,\n        checked: this.state.workFlowSelectedOptions.toString().indexOf(opt.inf) > -1 // checked={opt.checked}\n        ,\n        onChange: e => {\n          let newSelection = e.target.value;\n          let newSelectionArray;\n\n          if (this.state.workFlowSelectedOptions.indexOf(e.target.value) > -1) {\n            newSelectionArray = [this.state.workFlowSelectedOptions.filter(s => s !== newSelection)];\n          } else {\n            newSelectionArray = [...this.state.workFlowSelectedOptions, newSelection];\n          }\n\n          this.setState({\n            workFlowSelectedOptions: newSelectionArray\n          });\n        },\n        type: \"checkbox\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), \" \", \"\\xA0 \", opt.inf, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0\", \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), \" \");\n    }), \" \"), \" \"), \" \", this.state.workFlowSelectedOptions.toString() === \"Monitoring    \" && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"30px\",\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" \"), \" \\xA0\"), React.createElement(\"div\", {\n      className: \"form-check-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.MonitoringOptions.map((opt, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf,\n        checked: this.state.MonitoringOptionSelection.toString().indexOf(opt.inf) > -1,\n        onChange: e => {\n          this.setState({\n            MonitoringOptionSelection: [e.target.value]\n          });\n        },\n        type: \"radio\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), \"\\xA0\", opt.inf, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\");\n    }))), this.state.workFlowSelectedOptions.toString() === \"Git Provisioning    \" && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"30px\",\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \" \"), \" \\xA0\"), React.createElement(\"div\", {\n      className: \"form-check-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.state.GitOptions.map((opt, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf,\n        checked: this.state.GitSelection.toString().indexOf(opt.inf) > -1,\n        onChange: e => {\n          this.setState({\n            GitSelection: [e.target.value]\n          });\n        },\n        type: \"radio\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), \"\\xA0\", opt.inf, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\");\n    }))), this.state.workFlowSelectedOptions.toString() === \"Integration with JIRA    \" && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      style: {\n        marginLeft: \"30px\",\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \" \"), \" \\xA0\"), React.createElement(\"div\", {\n      className: \"form-check-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, this.state.JiraOptions.map((opt, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: opt.inf,\n        checked: this.state.JiraOptionSelection.toString().indexOf(opt.inf) > -1,\n        onChange: e => {\n          this.setState({\n            JiraOptionSelection: [e.target.value]\n          });\n        },\n        type: \"radio\",\n        key: opt.id,\n        disabled: opt.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), \"\\xA0\", opt.inf, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\");\n    }))), this.state.JiraOptionSelection.toString() === \"Create a new JIRA project    \" && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        width: \"770px\",\n        marginRight: \"7px\",\n        marginLeft: \"30px\",\n        marginBottom: \"11px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-form-label required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Jira Username\")), React.createElement(\"input\", {\n      className: \"form-control mb-2 mr-sm-2\",\n      type: \"text\",\n      onChange: e => this.setState({\n        JiraUserName: e.target.value\n      }),\n      placeholder: \"Enter Project Name\",\n      required: true,\n      value: this.state.JiraUserName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }))), React.createElement(\"i\", {\n      className: \"fa fa-info-circle fa-lg\",\n      style: {\n        color: \"black\"\n      },\n      title: \"Description about Jira Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        width: \"770px\",\n        marginRight: \"7px\",\n        marginLeft: \"30px\",\n        marginBottom: \"11px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-form-label required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Jira Password\")), React.createElement(\"input\", {\n      className: \"form-control mb-2 mr-sm-2\",\n      type: \"text\",\n      onChange: e => this.setState({\n        JiraPassword: e.target.value\n      }),\n      placeholder: \"Enter Project Name\",\n      required: true,\n      value: this.state.JiraPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }))), React.createElement(\"i\", {\n      className: \"fa fa-info-circle fa-lg\",\n      style: {\n        color: \"black\"\n      },\n      title: \"Description about Jira Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n{}\nexport default FormComponent3;","map":{"version":3,"sources":["/home/nikhil/Desktop/drivelatest/src/components/Stepper/FormComponent3.jsx"],"names":["React","Component","FormComponent3","constructor","props","state","workFlowOptions","isDisabled","id","inf","checked","workFlowSelectedOptions","MonitoringOptions","MonitoringOptionSelection","JiraOptions","JiraOptionSelection","JiraUserName","JiraPassword","GitOptions","GitSelection","componentWillUnmount","saveData","componentDidMount","setState","render","marginTop","marginLeft","marginRight","map","opt","toString","indexOf","e","newSelection","target","value","newSelectionArray","filter","s","i","display","width","marginBottom","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass FormComponent3 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workFlowOptions: [\n        { isDisabled: \"\", id: 1, inf: \"Logging    \", checked: \"checked\" },\n        { isDisabled: \"disabled\", id: 2, inf: \"Monitoring    \", checked: \"\" },\n        {\n          isDisabled: \"\",\n          id: 3,\n          inf: \"Integration with JIRA    \",\n          checked: \"\"\n        },\n        {\n          isDisabled: \"disabled\",\n          id: 4,\n          inf: \"Git Provisioning    \",\n          checked: \"\"\n        }\n      ],\n      workFlowSelectedOptions: [],\n      MonitoringOptions: [\n        { isDisabled: \"disabled\", id: 1, inf: \"Cloud Watch\" },\n        { isDisabled: \"disabled\", id: 2, inf: \"Stack Driver\" }\n      ],\n      MonitoringOptionSelection: \"\",\n      JiraOptions: [\n        {\n          isDisabled: \"disabled\",\n          id: 1,\n          inf: \"Add to an existing JIRA project\"\n        },\n        { isDisabled: \"\", id: 2, inf: \"Create a new JIRA project\" }\n      ],\n      JiraOptionSelection: \"\",\n      JiraUserName: \"\",\n      JiraPassword: \"\",\n      GitOptions: [\n        {\n          isDisabled: \"disabled\",\n          id: 1,\n          inf: \"Add an existing gitlab account\"\n        },\n        { isDisabled: \"disabled\", id: 2, inf: \"Create a new Gitlab Account\" }\n      ],\n      GitSelection: \"\"\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.saveData(3, this.state);\n  }\n  componentDidMount() {\n    this.setState({\n      workFlowSelectedOptions: this.props.workFlowSelectedOptions\n    });\n    this.setState({ JiraOptionSelection: this.props.JiraOptionSelection });\n    this.setState({ JiraUserName: this.props.JiraUserName });\n    this.setState({ JiraPassword: this.props.JiraPassword });\n    this.setState({ GitSelection: this.props.GitSelection });\n    this.setState({\n      MonitoringOptionSelection: this.props.MonitoringOptionSelection\n    });\n  }\n  render() {\n    return (\n      <>\n        <form\n          className=\"w-75 bg-light text-dark offset-lg-1\"\n          validate=\"true\"\n          noValidate\n          style={{\n            marginTop: \"50px\"\n          }}\n        >\n          <h2>\n            <center>\n              <b> Workflow Monitoring </b>{\" \"}\n            </center>{\" \"}\n          </h2>{\" \"}\n          <div className=\"form-group\">\n            <label\n              className=\"form-check-label\"\n              style={{\n                marginLeft: \"10px\",\n                marginRight: \"18px\"\n              }}\n            >\n              {\" \"}\n              <b> Workflow Options </b> &nbsp;{\" \"}\n            </label>{\" \"}\n            <br />\n            <br />\n            <div className=\"form-check\">\n              {\" \"}\n              {this.state.workFlowOptions.map(opt => {\n                return (\n                  <>\n                    <br />\n                    <label key={opt.id} className=\"form-check-label\">\n                      <input\n                        value={opt.inf}\n                        checked={\n                          this.state.workFlowSelectedOptions\n                            .toString()\n                            .indexOf(opt.inf) > -1\n                        }\n                        // checked={opt.checked}\n                        onChange={e => {\n                          let newSelection = e.target.value;\n                          let newSelectionArray;\n                          if (\n                            this.state.workFlowSelectedOptions.indexOf(\n                              e.target.value\n                            ) > -1\n                          ) {\n                            newSelectionArray = [\n                              this.state.workFlowSelectedOptions.filter(\n                                s => s !== newSelection\n                              )\n                            ];\n                          } else {\n                            newSelectionArray = [\n                              ...this.state.workFlowSelectedOptions,\n                              newSelection\n                            ];\n                          }\n                          this.setState({\n                            workFlowSelectedOptions: newSelectionArray\n                          });\n                        }}\n                        type=\"checkbox\"\n                        key={opt.id}\n                        disabled={opt.isDisabled}\n                      />{\" \"}\n                      &nbsp; {opt.inf}\n                      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{\" \"}\n                      <br />\n                      <br />\n                    </label>{\" \"}\n                  </>\n                );\n              })}{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          {this.state.workFlowSelectedOptions.toString() ===\n            \"Monitoring    \" && (\n            <div className=\"form-group\">\n              <label\n                className=\"form-check-label\"\n                style={{ marginLeft: \"30px\", marginRight: \"20px\" }}\n              >\n                <b> </b> &nbsp;\n              </label>\n              <div className=\"form-check-inline \">\n                {this.state.MonitoringOptions.map((opt, i) => {\n                  return (\n                    <label key={i} className=\"form-check-label\">\n                      <input\n                        value={opt.inf}\n                        checked={\n                          this.state.MonitoringOptionSelection.toString().indexOf(\n                            opt.inf\n                          ) > -1\n                        }\n                        onChange={e => {\n                          this.setState({\n                            MonitoringOptionSelection: [e.target.value]\n                          });\n                        }}\n                        type=\"radio\"\n                        key={opt.id}\n                        disabled={opt.isDisabled}\n                      />\n                      &nbsp;\n                      {opt.inf}\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                      &nbsp;&nbsp; &nbsp;\n                    </label>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n          {this.state.workFlowSelectedOptions.toString() ===\n            \"Git Provisioning    \" && (\n            <div className=\"form-group\">\n              <label\n                className=\"form-check-label\"\n                style={{ marginLeft: \"30px\", marginRight: \"20px\" }}\n              >\n                <b> </b> &nbsp;\n              </label>\n              <div className=\"form-check-inline \">\n                {this.state.GitOptions.map((opt, i) => {\n                  return (\n                    <label key={i} className=\"form-check-label\">\n                      <input\n                        value={opt.inf}\n                        checked={\n                          this.state.GitSelection.toString().indexOf(opt.inf) >\n                          -1\n                        }\n                        onChange={e => {\n                          this.setState({\n                            GitSelection: [e.target.value]\n                          });\n                        }}\n                        type=\"radio\"\n                        key={opt.id}\n                        disabled={opt.isDisabled}\n                      />\n                      &nbsp;\n                      {opt.inf}\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                      &nbsp;&nbsp; &nbsp;\n                    </label>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n          {this.state.workFlowSelectedOptions.toString() ===\n            \"Integration with JIRA    \" && (\n            <div className=\"form-group\">\n              <label\n                className=\"form-check-label\"\n                style={{ marginLeft: \"30px\", marginRight: \"20px\" }}\n              >\n                <b> </b> &nbsp;\n              </label>\n              <div className=\"form-check-inline \">\n                {this.state.JiraOptions.map((opt, i) => {\n                  return (\n                    <label key={i} className=\"form-check-label\">\n                      <input\n                        value={opt.inf}\n                        checked={\n                          this.state.JiraOptionSelection.toString().indexOf(\n                            opt.inf\n                          ) > -1\n                        }\n                        onChange={e => {\n                          this.setState({\n                            JiraOptionSelection: [e.target.value]\n                          });\n                        }}\n                        type=\"radio\"\n                        key={opt.id}\n                        disabled={opt.isDisabled}\n                      />\n                      &nbsp;\n                      {opt.inf}\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                      &nbsp;&nbsp; &nbsp;\n                    </label>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n          {this.state.JiraOptionSelection.toString() ===\n            \"Create a new JIRA project    \" && (\n            <>\n              <div\n                style={{\n                  display: \"inline-block\",\n                  width: \"770px\",\n                  marginRight: \"7px\",\n                  marginLeft: \"30px\",\n                  marginBottom: \"11px\"\n                }}\n              >\n                <div className=\"form-group \">\n                  <label className=\"col-form-label required\">\n                    <b>Jira Username</b>\n                  </label>\n\n                  <input\n                    className=\"form-control mb-2 mr-sm-2\"\n                    type=\"text\"\n                    onChange={e =>\n                      this.setState({ JiraUserName: e.target.value })\n                    }\n                    placeholder=\"Enter Project Name\"\n                    required\n                    value={this.state.JiraUserName}\n                  />\n                </div>\n              </div>\n\n              <i\n                className=\"fa fa-info-circle fa-lg\"\n                style={{ color: \"black\" }}\n                title=\"Description about Jira Username\"\n              ></i>\n\n              <div\n                style={{\n                  display: \"inline-block\",\n                  width: \"770px\",\n                  marginRight: \"7px\",\n                  marginLeft: \"30px\",\n                  marginBottom: \"11px\"\n                }}\n              >\n                <div className=\"form-group \">\n                  <label className=\"col-form-label required\">\n                    <b>Jira Password</b>\n                  </label>\n\n                  <input\n                    className=\"form-control mb-2 mr-sm-2\"\n                    type=\"text\"\n                    onChange={e =>\n                      this.setState({ JiraPassword: e.target.value })\n                    }\n                    placeholder=\"Enter Project Name\"\n                    required\n                    value={this.state.JiraPassword}\n                  />\n                </div>\n              </div>\n\n              <i\n                className=\"fa fa-info-circle fa-lg\"\n                style={{ color: \"black\" }}\n                title=\"Description about Jira Password\"\n              ></i>\n            </>\n          )}\n        </form>\n      </>\n    );\n  }\n}\n{\n}\n\nexport default FormComponent3;\n"]},"metadata":{},"sourceType":"module"}